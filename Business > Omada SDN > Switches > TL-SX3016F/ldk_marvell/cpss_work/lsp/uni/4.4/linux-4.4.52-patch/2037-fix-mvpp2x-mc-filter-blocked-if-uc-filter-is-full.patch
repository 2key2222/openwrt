From 0bdb4d57368f1e2287ca6e90688898117e5caadd Mon Sep 17 00:00:00 2001
From: Alan Winkowski <walan@marvell.com>
Date: Mon, 16 Oct 2017 18:41:49 +0300
Subject: [PATCH 2037/2241] fix: mvpp2x: mc filter blocked if uc filter is full

- Before this patch, when mac unicast address filtering was full
  the device entered unicast promisc mode but didn't allow to enter
  new mac multicast address filtering
- This patch fixes this situation and allows to set mac multicast
  address filtering even when the mac unicast filtering is in promisc
  mode
- Fixes A7K8K-3463

Change-Id: Ib2ba4d444f81d02487c1da7d3e0eca9a34dfd9c0
Signed-off-by: Alan Winkowski <walan@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45227
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 37 +++++++++++-----------
 1 file changed, 18 insertions(+), 19 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 4bab70c..d8b2af8 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -4129,26 +4129,25 @@ static void mv_pp2x_set_rx_mode(struct net_device *dev)
 		/* Put dev into UC promisc if MAC num greater than uc filter max */
 		if (netdev_uc_count(dev) > port->priv->pp2_cfg.uc_filter_max) {
 			mv_pp2x_set_rx_uc_multi(port);
-			return;
-		}
-		/* Remove old enries not in uc list except M2M entry */
-		mv_pp2x_prs_mac_entry_del(port,
-					  MVPP2_PRS_MAC_UC,
-					  MVPP2_DEL_MAC_NOT_IN_LIST);
-		/* Add all entries into to uc mac addr filter list */
-		netdev_for_each_uc_addr(ha, dev) {
-			err = mv_pp2x_prs_mac_da_accept(port,
-							ha->addr, true);
-			if (err)
-				netdev_err(dev,
-					   "[%2x:%2x:%2x:%2x:%2x:%x]add fail\n",
-					   ha->addr[0], ha->addr[1],
-					   ha->addr[2], ha->addr[3],
-					   ha->addr[4], ha->addr[5]);
+		} else {
+			/* Remove old enries not in uc list except M2M entry */
+			mv_pp2x_prs_mac_entry_del(port,
+						  MVPP2_PRS_MAC_UC,
+						  MVPP2_DEL_MAC_NOT_IN_LIST);
+			/* Add all entries into to uc mac addr filter list */
+			netdev_for_each_uc_addr(ha, dev) {
+				err = mv_pp2x_prs_mac_da_accept(port,
+								ha->addr, true);
+				if (err)
+					netdev_err(dev,
+						   "[%2x:%2x:%2x:%2x:%2x:%x]add fail\n",
+						   ha->addr[0], ha->addr[1],
+						   ha->addr[2], ha->addr[3],
+						   ha->addr[4], ha->addr[5]);
+			}
+			/* Leave promisc mode */
+			mv_pp2x_prs_mac_uc_promisc_set(hw, id, false);
 		}
-		/* Leave promisc mode */
-		mv_pp2x_prs_mac_uc_promisc_set(hw, id, false);
-		mv_pp2x_prs_mac_mc_promisc_set(hw, id, false);
 
 		if (dev->flags & IFF_ALLMULTI) {
 			mv_pp2x_set_rx_allmulti(port);
-- 
2.7.4

