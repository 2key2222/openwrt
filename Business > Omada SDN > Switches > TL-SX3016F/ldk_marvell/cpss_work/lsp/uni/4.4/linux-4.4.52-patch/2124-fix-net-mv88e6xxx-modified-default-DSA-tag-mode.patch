From 03e7a9c9088b73dd75bec7405ca8e021723781aa Mon Sep 17 00:00:00 2001
From: Ravindra Reddy K <ravindra@marvell.com>
Date: Mon, 27 Nov 2017 14:40:35 +0530
Subject: [PATCH 2124/2241] fix: net: mv88e6xxx: modified default DSA tag mode

DSA_TAG is 4 byte marvell tag where as EDSA_TAG is 8 byte with
4 bytes user programable ether type and 4 bytes DSA tag.
Updated default CPU tag mode to DSA_TAG instead of EDSA_TAG.
Because, this is the most commonly used or recommended mode.

Note that egress mode of the port depends on dsa tag mode.
It must be set to EGRESS_UNMODIFIED in DSA_TAG mode, while
any other configuration is allowed in EDSA_TAG mode.

Change-Id: Ide59187100376549628a49ef3b0e739e52adb8e3
Signed-off-by: Ravindra Reddy K <ravindra@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/46890
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/47451
Tested-by: Omri Itach <omrii@marvell.com>
---
 drivers/net/dsa/Kconfig     | 1 +
 drivers/net/dsa/mv88e6xxx.c | 6 +++---
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/net/dsa/Kconfig b/drivers/net/dsa/Kconfig
index da18386..81cf8e3 100644
--- a/drivers/net/dsa/Kconfig
+++ b/drivers/net/dsa/Kconfig
@@ -12,6 +12,7 @@ config NET_DSA_MV88E6060
 config NET_DSA_MV88E6XXX
 	tristate "Marvell 88E6xxx Ethernet switch chip support"
 	depends on NET_DSA
+	select NET_DSA_TAG_DSA
 	select NET_DSA_TAG_EDSA
 	---help---
 	  This enables support for most of the Marvell 88E6xxx models of
diff --git a/drivers/net/dsa/mv88e6xxx.c b/drivers/net/dsa/mv88e6xxx.c
index 76f8feb..43b6280 100644
--- a/drivers/net/dsa/mv88e6xxx.c
+++ b/drivers/net/dsa/mv88e6xxx.c
@@ -2765,7 +2765,7 @@ static int mv88e6xxx_setup_port(struct mv88e6xxx_priv_state *ps, int port)
 		if (mv88e6xxx_6352_family(ps) || mv88e6xxx_6351_family(ps) ||
 		    mv88e6xxx_6165_family(ps) || mv88e6xxx_6097_family(ps) ||
 		    mv88e6xxx_6320_family(ps) || mv88e6xxx_6390_family(ps)) {
-			reg |= PORT_CONTROL_FRAME_ETHER_TYPE_DSA |
+			reg |= PORT_CONTROL_FRAME_MODE_DSA |
 				PORT_CONTROL_FORWARD_UNKNOWN |
 				PORT_CONTROL_FORWARD_UNKNOWN_MC;
 		}
@@ -2775,7 +2775,7 @@ static int mv88e6xxx_setup_port(struct mv88e6xxx_priv_state *ps, int port)
 		    mv88e6xxx_6095_family(ps) || mv88e6xxx_6065_family(ps) ||
 		    mv88e6xxx_6185_family(ps) || mv88e6xxx_6320_family(ps) ||
 		    mv88e6xxx_6390_family(ps)) {
-				reg |= PORT_CONTROL_EGRESS_ADD_TAG;
+				reg |= PORT_CONTROL_EGRESS_UNMODIFIED;
 		}
 	}
 	if (dsa_is_dsa_port(ds, port)) {
@@ -3758,7 +3758,7 @@ static const char *mv88e6xxx_drv_probe(struct device *dsa_dev,
 }
 
 struct dsa_switch_driver mv88e6xxx_switch_driver = {
-	.tag_protocol		= DSA_TAG_PROTO_EDSA,
+	.tag_protocol		= DSA_TAG_PROTO_DSA,
 	.probe			= mv88e6xxx_drv_probe,
 	.setup			= mv88e6xxx_setup,
 	.set_addr		= mv88e6xxx_set_addr,
-- 
2.7.4

