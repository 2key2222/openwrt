From e04789ceebf27c1e65b9784af1ff87211d55de91 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 19 Jul 2017 16:57:29 +0300
Subject: [PATCH 1810/2241] fix: net: mvpp2x: Drain CPU aggregated TXQ after
 CPU is in down state

This patch fix race between xmit procedure and CPU hotplug during heavy
traffic.
Race could cause traffic loss and traffic stuck.

Fix:
- Drain CPU aggregated TXQ after CPU is dead and prevent race with xmit
  procedure on same CPU.
- Packets transmitted from dead CPU address space by mv_pp22_thread_write
  function.

Change-Id: I4e63d2674565582cde1d6281d40e8935a4e6c146
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/41867
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 021f0a3..6f43187 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -4944,7 +4944,8 @@ static int mv_pp2x_port_cpu_callback(struct notifier_block *nfb,
 		if (port->priv->pp2xdata->interrupt_tx_done)
 			on_each_cpu_mask(&cpus_mask, mv_pp2x_tx_done_pkts_coal_set, port, 1);
 		break;
-	case CPU_DOWN_PREPARE:
+	case CPU_DEAD:
+	case CPU_DEAD_FROZEN:
 		cp_pcpu = per_cpu_ptr(port->priv->pcpu, cpu);
 		aggr_txq = &port->priv->aggr_txqs[cpu];
 		mv_pp2x_tx_timer_kill(cp_pcpu);
-- 
2.7.4

