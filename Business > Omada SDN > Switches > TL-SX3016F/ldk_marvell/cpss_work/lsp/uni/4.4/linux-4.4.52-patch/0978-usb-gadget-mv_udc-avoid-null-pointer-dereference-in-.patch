From 7e9857be3df49be7e2167887c41e3e3a87030e56 Mon Sep 17 00:00:00 2001
From: Omri Itach <omrii@marvell.com>
Date: Sun, 20 Mar 2016 19:07:12 +0200
Subject: [PATCH 0978/2241] usb: gadget: mv_udc: avoid null pointer dereference
 in usb_gadget_giveback_request

The recently introduced usb_gadget_giveback_request() was added in favor of
direct invocation of the completion routine.
However, in some cases the UDC driver clears req->req.complete assignment,
and calling usb_gadget_giveback_request will trigger a call to
req->req.complete while assuming it's still assigned.

to avoid null pointer dereference, test req->req.complete before calling
usb_gadget_giveback_request

Change-Id: Iea12eb3a46223c7c4e25ac28165d3ece33d5053f
Signed-off-by: Omri Itach <omrii@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32810
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
---
 drivers/usb/gadget/udc/mv_udc_core.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/gadget/udc/mv_udc_core.c b/drivers/usb/gadget/udc/mv_udc_core.c
index 6a8b136..44b25fb 100644
--- a/drivers/usb/gadget/udc/mv_udc_core.c
+++ b/drivers/usb/gadget/udc/mv_udc_core.c
@@ -253,7 +253,8 @@ static void done(struct mv_ep *ep, struct mv_req *req, int status)
 
 	spin_unlock(&ep->udc->lock);
 
-	usb_gadget_giveback_request(&ep->ep, &req->req);
+	if (req->req.complete)
+		usb_gadget_giveback_request(&ep->ep, &req->req);
 
 	spin_lock(&ep->udc->lock);
 	ep->stopped = stopped;
-- 
2.7.4

