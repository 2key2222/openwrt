From c3c61d5911ec3ce7840dc120ae95798abea079d1 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 16 Aug 2017 14:44:54 +0300
Subject: [PATCH 1888/2241] net: mvpp2: fix dma_mask overrun by
 coherent_dma_mask

Mvpp2x uses 32BIT coherent_dma_mask for RXQ, TXQ and BM allocation
due to HW limitations and 40BIT for all other physical memory
allocations. By default dma_mask and coherent_dma_mask has same
pointer, so setting 32BIT coherent_dma_mask overwrite 40BIT
dma_mask.

Using of 32BIT dma_mask on A8K system with 8GB physical memory causes
memory remap for each dma_map_single call(for memory above 4GB).

Perf record output:
  99.66%    99.66%  ksoftirqd/0   [kernel.kallsyms]
             |
             |--11.36%-- __pi_memcpy
             |          |
             |          |--97.71%-- unmap_single
             |          |          swiotlb_unmap_page
             |          |          __swiotlb_unmap_page
             |          |          mvpp2_poll
             |          |
             |           --2.29%-- map_single
             |                     swiotlb_map_page
             |                     __swiotlb_map_page
             |                     mvpp2_tx

Fix:
Allocate separate memory section for dma_mask during probe.

Change-Id: I1fe4037a80dc2180edaf9080d5b9c97b1c51af25
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/43110
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2.c b/drivers/net/ethernet/marvell/mvpp2.c
index f23ace7..88dde94 100644
--- a/drivers/net/ethernet/marvell/mvpp2.c
+++ b/drivers/net/ethernet/marvell/mvpp2.c
@@ -8014,14 +8014,19 @@ static int mvpp2_probe(struct platform_device *pdev)
 	priv->tclk = clk_get_rate(priv->pp_clk);
 
 	if (priv->hw_version == MVPP22) {
-		err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(40));
-		if (err)
-			goto err_mg_clk;
 		/* Sadly, the BM pools all share the same register to
 		 * store the high 32 bits of their address. So they
 		 * must all have the same high 32 bits, which forces
 		 * us to restrict coherent memory to DMA_BIT_MASK(32).
+		 * By default dma_mask and coherent_dma_mask point to
+		 * to same address. Need to allocate new dma_mask to
+		 * configure different dma and coherent_dma masks.
 		 */
+		pdev->dev.dma_mask = kmalloc(sizeof(*pdev->dev.dma_mask),
+					     GFP_KERNEL);
+		err = dma_set_mask(&pdev->dev, DMA_BIT_MASK(40));
+		if (err)
+			goto err_mg_clk;
 		err = dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(32));
 		if (err)
 			goto err_mg_clk;
-- 
2.7.4

