From 120972b10c269520fd2d59009f944587b52dfaf8 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Thu, 10 Nov 2016 14:26:56 +0200
Subject: [PATCH 1082/2241] fix: xor_v2: enable all descriptor's interrupts to
 fix RAID5 kernel panic

While running Raid5 the kernel got panic:
Kernel panic - not syncing: async_tx_quiesce: DMA error waiting...

Issue occurs since part of SW descriptors were not handled in
the engine and got timeout.
This patch is a temporary solution for the timeout issue, which enable the
interrupt for all the SW descriptors (not only for callback descriptors)

The full solution will be added next stage by interrupt coalescing feature

Change-Id: Ia420ff3b9ca27371491f3bf23fbaea5a13d3ba4a
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33655
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Ofer Heifetz <oferh@marvell.com>
---
 drivers/dma/mv_xor_v2.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/dma/mv_xor_v2.c b/drivers/dma/mv_xor_v2.c
index 87c2bd8..77a3084 100644
--- a/drivers/dma/mv_xor_v2.c
+++ b/drivers/dma/mv_xor_v2.c
@@ -168,7 +168,7 @@ struct mv_xor_v2_device {
  * @idx: descriptor index
  * @async_tx: support for the async_tx api
  * @hw_desc: assosiated HW descriptor
- * @node: node of the SW descriprots
+ * @node: node of the SW descriprots (free_sw_desc or alloc_sw_desc or complete_sw_desc)
 */
 struct mv_xor_v2_sw_desc {
 	int idx;
@@ -437,8 +437,8 @@ mv_xor_v2_prep_dma_memcpy(struct dma_chan *chan, dma_addr_t dest, dma_addr_t src
 	hw_descriptor->desc_ctrl =
 		DESC_OP_MODE_MEMCPY << DESC_OP_MODE_SHIFT;
 
-	if (flags & DMA_PREP_INTERRUPT)
-		hw_descriptor->desc_ctrl |= DESC_IOD;
+	/* Enable interrupt for all descriptions, as preparation for coalescing feature */
+	hw_descriptor->desc_ctrl |= DESC_IOD;
 
 	/* Set source address */
 	hw_descriptor->fill_pattern_src_addr[0] = lower_32_bits(src);
@@ -506,8 +506,8 @@ mv_xor_v2_prep_dma_xor(struct dma_chan *chan, dma_addr_t dest, dma_addr_t *src,
 		DESC_OP_MODE_XOR << DESC_OP_MODE_SHIFT;
 	hw_descriptor->desc_ctrl |= DESC_P_BUFFER_ENABLE;
 
-	if (flags & DMA_PREP_INTERRUPT)
-		hw_descriptor->desc_ctrl |= DESC_IOD;
+	/* Enable interrupt for all descriptions, as preparation for coalescing feature */
+	hw_descriptor->desc_ctrl |= DESC_IOD;
 
 	/* Set the data buffers */
 	for (i = 0; i < src_cnt; i++)
-- 
2.7.4

