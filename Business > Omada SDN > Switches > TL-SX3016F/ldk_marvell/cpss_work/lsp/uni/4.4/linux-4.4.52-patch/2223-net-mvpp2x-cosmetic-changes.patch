From 200d81eef2f1c81da4cefb1454fc011cb22a6f80 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 4 Feb 2018 11:42:12 +0200
Subject: [PATCH 2223/2241] net: mvpp2x: cosmetic changes

No functional changes, only cosmetic changes.

Change-Id: I7c8109ba2eb0a75c862001cc4091d67744d91df0
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/49981
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h      |  2 --
 .../net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c  |  1 -
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c   |  7 ++---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 31 ++++++++--------------
 4 files changed, 15 insertions(+), 26 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
index 2ec0a48..5c39f25 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x.h
@@ -24,7 +24,6 @@
 #include <linux/log2.h>
 #include <linux/uio_driver.h>
 
-
 #include "mv_pp2x_hw_type.h"
 #include "mv_gop110_hw_type.h"
 
@@ -946,5 +945,4 @@ int mv_pp2x_txq_reserved_desc_num_proc(struct mv_pp2x *priv,
 int mv_pp2x_port_musdk_set(void *netdev_priv);
 int mv_pp2x_port_musdk_clear(void *netdev_priv);
 
-
 #endif /*_MVPP2_H_*/
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
index fc8835e..889af36 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
@@ -1238,4 +1238,3 @@ void mv_pp2x_set_ethtool_ops(struct net_device *netdev)
 	netdev->ethtool_ops = &mv_pp2x_eth_tool_ops;
 }
 
-
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
index 9243ff5..e80586e 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
@@ -2167,7 +2167,6 @@ static void mv_pp2x_prs_vid_init(struct mv_pp2x_hw *hw)
 	/* Update shadow table and hw entry */
 	mv_pp2x_prs_shadow_set(hw, pe.index, MVPP2_PRS_LU_VID);
 	mv_pp2x_prs_hw_write(hw, &pe);
-
 }
 
 /* Set entries for PPPoE ethertype */
@@ -3987,8 +3986,10 @@ int mv_pp2x_aggr_desc_num_check(struct mv_pp2x *priv,
 {
 	if ((aggr_txq->sw_count + aggr_txq->hw_count + num) > aggr_txq->size) {
 		/* Update number of occupied aggregated Tx descriptors */
-		u32 val = mv_pp2x_relaxed_read(&priv->hw,
-				MVPP2_AGGR_TXQ_STATUS_REG(cpu), cpu);
+		u32 val;
+
+		val = mv_pp2x_relaxed_read(&priv->hw,
+					   MVPP2_AGGR_TXQ_STATUS_REG(cpu), cpu);
 
 		aggr_txq->hw_count = val & MVPP2_AGGR_TXQ_PENDING_MASK;
 
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 92b88e2..c91aa5b 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -75,7 +75,6 @@
 #define UIO_PP2_STRING  "uio_pp_%d"
 #define UIO_PORT_STRING "uio_pp_port_%d:%d"
 
-
 /* Declaractions */
 #if defined(CONFIG_NETMAP) || defined(CONFIG_NETMAP_MODULE)
 u8 mv_pp2x_num_cos_queues = 1;
@@ -105,7 +104,6 @@ static u16 stats_delay_msec = STATS_DELAY;
 static u16 stats_delay;
 static int auto_cell_index;
 
-
 u32 debug_param;
 
 struct mv_pp2x_pool_attributes mv_pp2x_pools[] = {
@@ -1783,7 +1781,8 @@ static irqreturn_t mv_pp2_link_change_isr(int irq, void *data)
 {
 	struct mv_pp2x_port *port = (struct mv_pp2x_port *)data;
 
-	pr_debug("%s cpu_id(%d) irq(%d) pp_port(%d)\n", __func__, smp_processor_id(), irq, port->id);
+	pr_debug("%s cpu_id(%d) irq(%d) pp_port(%d)\n", __func__,
+		 smp_processor_id(), irq, port->id);
 	if (port->priv->pp2_version == PPV22) {
 		/* mask all events from this mac */
 		mv_gop110_port_events_mask(&port->priv->hw.gop, &port->mac_data);
@@ -2223,12 +2222,10 @@ static void mv_pp2x_width_calc(struct mv_pp2x_port *port, u32 *cpu_width,
 			*cpu_width = ilog2(roundup_pow_of_two(hot_cpus));
 		/* Calculate cos queue width */
 		if (cos_width)
-			*cos_width = ilog2(roundup_pow_of_two(
-				port->cos_cfg.num_cos_queues));
+			*cos_width = ilog2(roundup_pow_of_two(port->cos_cfg.num_cos_queues));
 		/* Calculate rx queue width on the port */
 		if (port_rxq_width)
-			*port_rxq_width = ilog2(roundup_pow_of_two(
-				pp2->pp2xdata->pp2x_max_port_rxqs));
+			*port_rxq_width = ilog2(roundup_pow_of_two(pp2->pp2xdata->pp2x_max_port_rxqs));
 	}
 }
 
@@ -2485,19 +2482,15 @@ int mv_pp22_rss_rxfh_indir_set(struct mv_pp2x_port *port)
 	rss_entry.sel = MVPP22_RSS_ACCESS_TBL;
 
 	for (rss_tbl = 0; rss_tbl < rss_tbl_needed; rss_tbl++) {
-		for (entry_idx = 0; entry_idx < MVPP22_RSS_TBL_LINE_NUM;
-			entry_idx++) {
+		for (entry_idx = 0; entry_idx < MVPP22_RSS_TBL_LINE_NUM; entry_idx++) {
 			rss_entry.u.entry.tbl_id = rss_tbl;
 			rss_entry.u.entry.tbl_line = entry_idx;
 			if (mv_pp22_cpu_id_from_indir_tbl_get(port->priv,
-							      port->priv->rx_indir_table[entry_idx],
-			     &cpu_id))
+							      port->priv->rx_indir_table[entry_idx], &cpu_id))
 				return -1;
 			/* Value of rss_tbl equals to cos queue */
-			rss_entry.u.entry.rxq = (cpu_id << cos_width) |
-				rss_tbl;
-			if (mv_pp22_rss_tbl_entry_set(
-				&port->priv->hw, &rss_entry))
+			rss_entry.u.entry.rxq = (cpu_id << cos_width) | rss_tbl;
+			if (mv_pp22_rss_tbl_entry_set(&port->priv->hw, &rss_entry))
 				return -1;
 		}
 	}
@@ -4631,7 +4624,6 @@ static int mv_pp2x_change_mtu(struct net_device *dev, int mtu)
 		return -EPERM;
 	}
 
-
 	mtu = mv_pp2x_check_mtu_valid(dev, mtu);
 	if (mtu < 0) {
 		err = mtu;
@@ -4819,7 +4811,6 @@ static const struct net_device_ops mv_pp2x_netdev_ops = {
 	.ndo_vlan_rx_kill_vid	= mv_pp2x_rx_kill_vid,
 };
 
-
 /* Driver initialization */
 
 static void mv_pp21_port_power_up(struct mv_pp2x_port *port)
@@ -6651,9 +6642,9 @@ static int mv_pp2x_probe(struct platform_device *pdev)
 
 	err = mv_pp2x_platform_data_get(pdev, priv, &cell_index, &port_count);
 	if (err) {
-		if (err != -EPROBE_DEFER)
+		if (err != -EPROBE_DEFER) {
 			dev_err(&pdev->dev, "mvpp2: platform_data get failed\n");
-		else {
+		} else {
 			/* Rollback auto_cell_index if it was used */
 			if (auto_cell_index)
 				auto_cell_index--;
@@ -6685,7 +6676,7 @@ static int mv_pp2x_probe(struct platform_device *pdev)
 				i * MVPP2_ADDR_SPACE_SIZE;
 	}
 
-	/*Init PP2 Configuration */
+	/* Init PP2 Configuration */
 	err = mv_pp2x_init_config(&priv->pp2_cfg, cell_index);
 	priv->hw.mv_pp2x_no_single_mode = (mv_pp2x_queue_mode == MVPP2_SINGLE_RESOURCE_MODE) ? 0 : 1;
 
-- 
2.7.4

