From f3c5b28e37e082afb627b230251c411a97eb66bb Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 22 Sep 2016 15:42:05 +0300
Subject: [PATCH 0999/2241] fix: mvpp2x: fix board freeze with bi directional
 RSS traffic

- fix board during refill with RSS enabled on both ports during routing

Change-Id: Id8262c43fe0fa9b10352bc4aec653b4d6efffffd
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/33079
Tested-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 31 +++++-----------------
 1 file changed, 6 insertions(+), 25 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 5bef90c..a85e17a 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -2239,9 +2239,7 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 	int rx_received, rx_filled, i;
 	u32 rcvd_pkts = 0;
 	u32 rcvd_bytes = 0;
-	u32 refill_array[MVPP2_BM_POOLS_NUM] = {0};
 	u8  first_bm_pool = port->priv->pp2_cfg.first_bm_pool;
-	u8  num_pool = MVPP2_BM_SWF_NUM_POOLS;
 	int cpu = smp_processor_id();
 
 #ifdef DEV_NETMAP
@@ -2271,6 +2269,7 @@ static int mv_pp2x_rx(struct mv_pp2x_port *port, struct napi_struct *napi,
 		int rx_bytes;
 		dma_addr_t buf_phys_addr;
 		unsigned char *data;
+		int err;
 
 #if defined(__BIG_ENDIAN)
 		if (port->priv->pp2_version == PPV21)
@@ -2326,12 +2325,15 @@ err_drop_frame:
 			goto err_drop_frame;
 		}
 
+		err = mv_pp2x_rx_refill_new(port, bm_pool,
+			bm_pool->log_id, 0, cpu);
+		if (err)
+			netdev_err(port->dev, "failed to refill BM pools\n");
+
 		dma_unmap_single(dev->dev.parent, buf_phys_addr,
 				 MVPP2_RX_BUF_SIZE(bm_pool->pkt_size),
 				 DMA_FROM_DEVICE);
 
-		refill_array[bm_pool->log_id]++;
-
 #ifdef MVPP2_VERBOSE
 		mv_pp2x_skb_dump(skb, rx_desc->data_size, 4);
 #endif
@@ -2357,27 +2359,6 @@ err_drop_frame:
 		napi_gro_receive(napi, skb);
 	}
 
-	/* Refill pool */
-	for (i = 0; i < num_pool; i++) {
-		int err;
-		struct mv_pp2x_bm_pool *refill_bm_pool;
-
-		if (!refill_array[i])
-			continue;
-
-		refill_bm_pool = &port->priv->bm_pools[i];
-		while (refill_array[i]--) {
-			err = mv_pp2x_rx_refill_new(port, refill_bm_pool,
-				refill_bm_pool->log_id + first_bm_pool, 0, cpu);
-			if (err) {
-				netdev_err(port->dev, "failed to refill BM pools\n");
-				refill_array[i]++;
-				rx_filled -= refill_array[i];
-				break;
-			}
-		}
-	}
-
 	if (rcvd_pkts) {
 		struct mv_pp2x_pcpu_stats *stats = this_cpu_ptr(port->stats);
 
-- 
2.7.4

