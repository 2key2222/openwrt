From 54a9827e23c94490e742e1e31e0d05abef1f22d4 Mon Sep 17 00:00:00 2001
From: Yelena Krivosheev <yelena@marvell.com>
Date: Sun, 19 Feb 2017 10:13:40 +0200
Subject: [PATCH 1533/2241] net: mvneta: support rxq and txq length change by
 ethtool

Set max queue size up to 4096 descriptors

Change-Id: I373f5fb810f8f2866db0a54a333535d75a38079c
Signed-off-by: Yelena Krivosheev <yelena@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/36853
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Dmitri Epshtein <dima@marvell.com>
(cherry picked from commit 6988f6e5ab3b644e4ff4ab60fb9c8293ec51c848)
Reviewed-on: http://vgitil04.il.marvell.com:8080/37150
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvneta.c | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index d80939d..fd68f73 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -298,10 +298,14 @@ enum mvneta_port_type {
 #define TSO_HEADER_SIZE 128
 
 /* Max number of Rx descriptors */
-#define MVNETA_MAX_RXD 128
+#define MVNETA_MAX_RXD 4096
+/* Default number of Rx descriptors */
+#define MVNETA_RXD_NUM 128
 
 /* Max number of Tx descriptors */
-#define MVNETA_MAX_TXD 532
+#define MVNETA_MAX_TXD 4096
+/* Default number of Tx descriptors */
+#define MVNETA_TXD_NUM 532
 
 /* Max number of allowed TCP segments for software TSO */
 #define MVNETA_MAX_TSO_SEGS 100
@@ -4008,6 +4012,9 @@ static int mvneta_ethtool_set_ringparam(struct net_device *dev,
 		return -EINVAL;
 	pp->rx_ring_size = ring->rx_pending < MVNETA_MAX_RXD ?
 		ring->rx_pending : MVNETA_MAX_RXD;
+	if (pp->rx_ring_size != ring->rx_pending)
+		netdev_warn(dev, "RX queue size set to %u (requested %u)\n",
+			    pp->rx_ring_size, ring->rx_pending);
 
 	pp->tx_ring_size = clamp_t(u16, ring->tx_pending,
 				   MVNETA_MAX_SKB_DESCS * 2, MVNETA_MAX_TXD);
@@ -4660,7 +4667,7 @@ static int mvneta_probe(struct platform_device *pdev)
 		goto err_put_phy_node;
 	}
 
-	dev->tx_queue_len = MVNETA_MAX_TXD;
+	dev->tx_queue_len = MVNETA_TXD_NUM;
 	dev->watchdog_timeo = 5 * HZ;
 	dev->netdev_ops = &mvneta_netdev_ops;
 
@@ -4774,8 +4781,8 @@ static int mvneta_probe(struct platform_device *pdev)
 	if (dram_target_info || pp->neta_armada3700)
 		mvneta_conf_mbus_windows(pp, dram_target_info);
 
-	pp->tx_ring_size = MVNETA_MAX_TXD;
-	pp->rx_ring_size = MVNETA_MAX_RXD;
+	pp->tx_ring_size = MVNETA_TXD_NUM;
+	pp->rx_ring_size = MVNETA_RXD_NUM;
 
 	pp->dev = dev;
 	SET_NETDEV_DEV(dev, &pdev->dev);
-- 
2.7.4

