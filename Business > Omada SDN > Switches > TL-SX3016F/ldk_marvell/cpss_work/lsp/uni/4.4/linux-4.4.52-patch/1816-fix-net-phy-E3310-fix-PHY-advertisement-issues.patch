From e03240012d1f74f33e6c2b39c280cb64bdd66d4b Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 11 Jun 2017 13:59:37 +0300
Subject: [PATCH 1816/2241] fix: net: phy: E3310: fix PHY advertisement issues

This patch fix PHY 88E3310 advertisement issues.
In current code Duplex and Speed modes cannot be
advertised from PHY 88E3310 side.

Fixed issues:
1. Add 1000-BaseT to supported PHY modes.
2. Use Copper line side register address space for:
	- Autoneg reset
	- Advertisement settings
3. Add 1000G advertisement configuration.

Change-Id: I32291c86234196ff6856faea2abe3cab57099d6c
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/40328
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/phy/marvell.c | 23 ++++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/drivers/net/phy/marvell.c b/drivers/net/phy/marvell.c
index f2d3f22..dd7468d 100644
--- a/drivers/net/phy/marvell.c
+++ b/drivers/net/phy/marvell.c
@@ -191,6 +191,9 @@
 #define MII_88E3310_COPPER_SP_1000	0x0040
 #define MII_88E3310_COPPER_SP_100	0x2000
 
+#define MII_88E3310_AUT_NEG_CON		0x8000
+#define MII_88E3310_AUT_NEG_ST		0x8001
+
 MODULE_DESCRIPTION("Marvell PHY driver");
 MODULE_AUTHOR("Andy Fleming");
 MODULE_LICENSE("GPL");
@@ -659,6 +662,10 @@ int m88e3310_phy_update_link(struct phy_device *phydev)
 
 static int m88e3310_config_init(struct phy_device *phydev)
 {
+	/* Add 1000baseT_Full to supported modes. Supported mode required by
+	 * MII advertise control function.
+	 */
+	phydev->supported |= SUPPORTED_1000baseT_Full;
 	m88e3310_phy_update_link(phydev);
 
 	return 0;
@@ -1053,7 +1060,7 @@ int m88e3310_restart_aneg(struct phy_device *phydev)
 	/* Don't isolate the PHY if we're negotiating */
 	ctl &= ~BMCR_ISOLATE;
 
-	return phy_write(phydev, MV_XMDIO(MDIO_MMD_PCS, MII_BMCR), ctl);
+	return phy_write(phydev, MV_XMDIO(MDIO_MMD_AN, MII_BMCR), ctl);
 }
 
 int m88e3310_setup_forced(struct phy_device *phydev)
@@ -1104,7 +1111,7 @@ static int m88e3310_config_advert(struct phy_device *phydev)
 		changed = 1;
 	}
 
-	bmsr = phy_read(phydev, MV_XMDIO(MDIO_MMD_PMAPMD, MII_BMSR));
+	bmsr = phy_read(phydev, MV_XMDIO(MDIO_MMD_AN, MII_88E3310_AUT_NEG_ST));
 
 	/* Per 802.3-2008, Section 22.2.4.2.16 Extended status all
 	 * 1000Mbits/sec capable PHYs shall have the BMSR_ESTATEN bit set to a
@@ -1127,6 +1134,8 @@ static int m88e3310_config_advert(struct phy_device *phydev)
 	if (adv != oldadv)
 		changed = 1;
 
+	phy_write(phydev, MV_XMDIO(MDIO_MMD_AN, MII_88E3310_AUT_NEG_CON), adv);
+
 	return changed;
 }
 
@@ -1134,10 +1143,14 @@ int m88e3310_config_aneg(struct phy_device *phydev)
 {
 	int result;
 
-	/* Only COPPER_BASE_T support autoneg*/
+	/* Only COPPER_BASE_T support autoneg */
 	if ((phydev->dev_flags & FIBER_BASE_X) || (phydev->dev_flags & FIBER_BASE_R))
 		return 0;
 
+	/* Current code doesn't support COPPER_BASE_T 10G autoneg */
+	if (phydev->speed == SPEED_10000 || phydev->speed == SPEED_5000)
+		return 0;
+
 	if (phydev->autoneg != AUTONEG_ENABLE)
 		return m88e3310_setup_forced(phydev);
 
@@ -1284,6 +1297,10 @@ static void m88e3310_copper_read_status(struct phy_device *phydev)
 
 		lpa &= adv;
 
+		adv = phy_read(phydev, MV_XMDIO(MDIO_MMD_AN, MII_88E3310_AUT_NEG_ST));
+
+		phydev->lp_advertising |= mii_stat1000_to_ethtool_lpa_t(adv);
+
 		if (status & MII_M1011_PHY_STATUS_FULLDUPLEX)
 			phydev->duplex = DUPLEX_FULL;
 		else
-- 
2.7.4

