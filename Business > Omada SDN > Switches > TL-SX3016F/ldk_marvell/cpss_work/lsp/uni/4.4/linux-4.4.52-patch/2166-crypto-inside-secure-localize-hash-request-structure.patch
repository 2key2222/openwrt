From 3ffa456b54422cbaff2733bcf291f0f9e8dbb326 Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Sun, 14 Jan 2018 09:00:34 +0200
Subject: [PATCH 2166/2241] crypto: inside-secure: localize hash request
 structure

ahash_req is used only in the hash code, moving structure from
header to hash ccode.

Change-Id: I6a3ca4dd26660c12d26ba4bd4089d3d3965585db
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/48928
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/crypto/inside-secure/hash.c     | 16 ++++++++++++++++
 drivers/crypto/inside-secure/safexcel.h | 16 ----------------
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/crypto/inside-secure/hash.c b/drivers/crypto/inside-secure/hash.c
index f8a4ab5..d085e52 100644
--- a/drivers/crypto/inside-secure/hash.c
+++ b/drivers/crypto/inside-secure/hash.c
@@ -24,6 +24,22 @@ struct safexcel_ahash_ctx {
 	u32 opad[SHA1_DIGEST_SIZE / sizeof(u32)];
 };
 
+/* Ahash structures */
+struct safexcel_ahash_req {
+	bool last_req;
+	bool finish;
+	bool hmac;
+	bool needs_inv;
+
+	u8 state_sz;	/* expected sate size, only set once */
+	u32 state[SHA256_DIGEST_SIZE / sizeof(u32)];
+
+	u64 len;
+
+	u8 cache[SHA256_BLOCK_SIZE] __aligned(sizeof(u32));
+	u8 cache_next[SHA256_BLOCK_SIZE] __aligned(sizeof(u32));
+};
+
 static const u8 sha1_zero_digest[SHA1_DIGEST_SIZE] = {
 	0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55,
 	0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09,
diff --git a/drivers/crypto/inside-secure/safexcel.h b/drivers/crypto/inside-secure/safexcel.h
index 4c66bb1..9f72fed 100644
--- a/drivers/crypto/inside-secure/safexcel.h
+++ b/drivers/crypto/inside-secure/safexcel.h
@@ -669,22 +669,6 @@ struct safexcel_context {
 	unsigned int cache_sz;
 };
 
-/* Ahash structures */
-struct safexcel_ahash_req {
-	bool last_req;
-	bool finish;
-	bool hmac;
-	bool needs_inv;
-
-	u8 state_sz;	/* expected sate size, only set once */
-	u32 state[SHA256_DIGEST_SIZE / sizeof(u32)];
-
-	u64 len;
-
-	u8 cache[SHA256_BLOCK_SIZE] __aligned(sizeof(u32));
-	u8 cache_next[SHA256_BLOCK_SIZE] __aligned(sizeof(u32));
-};
-
 /*
  * Template structure to describe the algorithms in order to register them.
  * It also has the purpose to contain our private structure and is actually
-- 
2.7.4

