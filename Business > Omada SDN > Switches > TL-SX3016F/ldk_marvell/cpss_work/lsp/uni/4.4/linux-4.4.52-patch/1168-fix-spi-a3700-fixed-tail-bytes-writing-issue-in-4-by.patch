From 030927b2856f4c6ed36219363f5f60cade6e6de3 Mon Sep 17 00:00:00 2001
From: zachary <zhangzg@marvell.com>
Date: Fri, 9 Dec 2016 17:10:10 +0800
Subject: [PATCH 1168/2241] fix: spi: a3700: fixed tail bytes writing issue in
 4-bytes mode

- The SPI 4-bytes transfer mode adds the padding bytes
  '0xff' in write operation. The current driver has a
  logic issue to transmit the padding data for multiple
  times when padding the data. It caused the data corrupt
  in Linux dt test if writing a data chunk whose length
  is non 4-bytes aligned.
- This patch fixed the issue by adjusting transmission
  after padding the data and write all the tail data in
  one shot.

Change-Id: I608e86b3f7086691e48c0566453f7d6a41e2c017
Signed-off-by: zachary <zhangzg@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34539
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 drivers/spi/spi-armada-3700.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/spi/spi-armada-3700.c b/drivers/spi/spi-armada-3700.c
index ae46f8b..ddf2e04 100644
--- a/drivers/spi/spi-armada-3700.c
+++ b/drivers/spi/spi-armada-3700.c
@@ -815,9 +815,8 @@ static int a3700_spi_fifo_write(struct a3700_spi *a3700_spi)
 				val |= *status->tx_buf++ << (8 * i);
 				i++;
 				status->buf_len--;
-
-				spireg_write(a3700_spi, A3700_SPI_DATA_OUT_REG, val);
 			}
+			spireg_write(a3700_spi, A3700_SPI_DATA_OUT_REG, val);
 			break;
 		}
 
-- 
2.7.4

