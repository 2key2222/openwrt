From d618606858e6641c80b63ba1545e22b16e022932 Mon Sep 17 00:00:00 2001
From: Dmitri Epshtein <dima@marvell.com>
Date: Mon, 24 Jul 2017 13:17:05 +0300
Subject: [PATCH 1821/2241] fix: neta: update check MTU valid in SWBM case

Part of the MTU size validation is relevant for HW BM only

Change-Id: I410c95d4b9c241f67dee0e3ceab3743f919fa423
Signed-off-by: Dmitri Epshtein <dima@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/42050
Reviewed-by: Neta Zur Hershkovits <neta@marvell.com>
Tested-by: Neta Zur Hershkovits <neta@marvell.com>
---
 drivers/net/ethernet/marvell/mvneta.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 1cca121..b524883 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -2204,7 +2204,7 @@ err_drop_frame:
 			if (err) {
 				/* set refill stop flag */
 				atomic_set(&rxq->refill_stop, 1);
-				netdev_err(dev, "Linux processing - Can't refill queue %d\n",
+				netdev_dbg(dev, "Linux processing - Can't refill queue %d\n",
 					   rxq->id);
 				/* disable rx_copybreak mode */
 				/* to prevent hidden buffer refill and buffers disorder */
@@ -3382,12 +3382,15 @@ static int mvneta_check_mtu_valid(struct net_device *dev, int mtu)
 		return -EINVAL;
 	}
 
-	if (MVNETA_RX_PKT_SIZE(mtu) > pp->pool_long->pkt_size) {
-		netdev_info(dev, "Illegal MTU value %d\n", mtu);
-		mtu = pp->pool_long->pkt_size -
-		      (MVNETA_MH_SIZE + MVNETA_VLAN_TAG_LEN + ETH_HLEN + ETH_FCS_LEN);
-		netdev_info(dev, "Round to %d to fit in buffer size %d\n",
-			    mtu, pp->pool_long->pkt_size);
+	if (pp->bm_priv) {
+		/* HWBM case. MTU can't be larger than buffers in Long pool */
+		if (MVNETA_RX_PKT_SIZE(mtu) > pp->pool_long->pkt_size) {
+			netdev_info(dev, "Illegal MTU value %d\n", mtu);
+			mtu = pp->pool_long->pkt_size -
+			      (MVNETA_MH_SIZE + MVNETA_VLAN_TAG_LEN + ETH_HLEN + ETH_FCS_LEN);
+			netdev_info(dev, "Round to %d to fit in buffer size %d\n",
+				    mtu, pp->pool_long->pkt_size);
+		}
 	}
 
 	if (!IS_ALIGNED(MVNETA_RX_PKT_SIZE(mtu), 8)) {
-- 
2.7.4

