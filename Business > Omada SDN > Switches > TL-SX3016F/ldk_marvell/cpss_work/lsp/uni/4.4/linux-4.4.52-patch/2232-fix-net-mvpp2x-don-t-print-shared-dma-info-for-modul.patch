From b5b6a97a8e017ffe0362dfc761390cb748c3e6e2 Mon Sep 17 00:00:00 2001
From: Yan Markman <ymarkman@marvell.com>
Date: Wed, 7 Feb 2018 13:37:41 +0200
Subject: [PATCH 2232/2241] fix: net: mvpp2x: don't print shared-dma info for
 module

PROBLEM:
Probe prints debug-info about reserved/shared dma-pool.
To obtain this info it needs cma_get_base/dev_get_cma_area functions
which are not exported by Kernel for KO-modules

SOLUTION:
Print the info for Kernel only but don't for KO-module

Change-Id: I1e1dbab658313baeb28d8adbb3650a8304272dfc
Signed-off-by: Yan Markman <ymarkman@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/50168
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index cc4bf370..dbc7cbc 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -6652,7 +6652,6 @@ static int mv_pp2x_probe(struct platform_device *pdev)
 	struct device_node *port_node;
 	struct mv_pp2x_cp_pcpu *cp_pcpu;
 	bool probe_defer = false;
-	phys_addr_t cma_addr;
 
 	priv = devm_kzalloc(&pdev->dev, sizeof(struct mv_pp2x), GFP_KERNEL);
 	if (!priv)
@@ -6673,13 +6672,21 @@ static int mv_pp2x_probe(struct platform_device *pdev)
 		goto err_clk;
 	}
 	priv->pp2_version = priv->pp2xdata->pp2x_ver;
+
 	/* Retrieve dts defined cma-area (shared-dma-pool).
 	 * Enables allocating cma_memory on DRAM that is physically close to the PPV2 device.
 	 */
 	of_reserved_mem_device_init(&pdev->dev);
-	cma_addr = cma_get_base(dev_get_cma_area(&pdev->dev));
-	dev_info(&pdev->dev, "cma_area base %pa size %ld MB\n", &cma_addr,
-		 cma_get_size(dev_get_cma_area(&pdev->dev)) / SZ_1M);
+#if !defined MODULE
+	/* cma_get_base/dev_get_cma_area are Not exported by Kernel */
+	{
+		phys_addr_t cma_addr;
+
+		cma_addr = cma_get_base(dev_get_cma_area(&pdev->dev));
+		dev_info(&pdev->dev, "cma_area base %pa size %ld MB\n", &cma_addr,
+			 cma_get_size(dev_get_cma_area(&pdev->dev)) / SZ_1M);
+	}
+#endif
 
 	mv_pp2x_used_addr_spaces = (mv_pp2x_queue_mode == MVPP2_SINGLE_RESOURCE_MODE) ? 1 : MVPP2_MAX_ADDR_SPACES;
 
-- 
2.7.4

