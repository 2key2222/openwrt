From e349e2f652a911d4cc4e22cda74ce8c3c3befa0f Mon Sep 17 00:00:00 2001
From: Ofer Heifetz <oferh@marvell.com>
Date: Tue, 24 Oct 2017 21:43:44 +0300
Subject: [PATCH 2046/2241] crypto: inside-secure: refrain from unneeded
 invalidation

Only when a context exists there is a need to check if it needs
invalidation, this commit reduces the unneeded invalidations

Change-Id: I4094746c6cd4b0d5e866853e6672034f776bd1ae
Signed-off-by: Ofer Heifetz <oferh@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45568
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Igal Liberman <igall@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/crypto/inside-secure/cipher.c | 11 +++++++----
 drivers/crypto/inside-secure/hash.c   |  4 ++--
 2 files changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/crypto/inside-secure/cipher.c b/drivers/crypto/inside-secure/cipher.c
index 70aff41..31a6f5c 100644
--- a/drivers/crypto/inside-secure/cipher.c
+++ b/drivers/crypto/inside-secure/cipher.c
@@ -74,10 +74,13 @@ static int safexcel_aes_setkey(struct crypto_ablkcipher *ctfm, const u8 *key,
 		return ret;
 	}
 
-	for (i = 0; i < len / sizeof(u32); i++) {
-		if (ctx->key[i] != cpu_to_le32(aes.key_enc[i])) {
-			ctx->base.needs_inv = true;
-			break;
+	/* if context exits and key changed, need to invalidate it */
+	if (ctx->base.ctxr_dma) {
+		for (i = 0; i < len / sizeof(u32); i++) {
+			if (ctx->key[i] != cpu_to_le32(aes.key_enc[i])) {
+				ctx->base.needs_inv = true;
+				break;
+			}
 		}
 	}
 
diff --git a/drivers/crypto/inside-secure/hash.c b/drivers/crypto/inside-secure/hash.c
index ceb6a38..3fc2981a 100644
--- a/drivers/crypto/inside-secure/hash.c
+++ b/drivers/crypto/inside-secure/hash.c
@@ -613,7 +613,7 @@ static int safexcel_ahash_final(struct ahash_request *areq)
 	 * Check if we need to invalidate the context,
 	 * this should be done only for EIP197 (no cache in EIP97).
 	 */
-	if (priv->eip_type == EIP197 && req->len &&
+	if (priv->eip_type == EIP197 && req->len && ctx->base.ctxr &&
 	    ctx->digest == CONTEXT_CONTROL_DIGEST_PRECOMPUTED)
 		ctx->base.needs_inv = safexcel_ahash_needs_inv_get(areq);
 
@@ -903,7 +903,7 @@ static int safexcel_hmac_sha1_setkey(struct crypto_ahash *tfm, const u8 *key,
 	 * For EIP197 we need to Check if the ipad/opad were changed,
 	 * if yes, need to invalidate the context.
 	 */
-	if (priv->eip_type == EIP197) {
+	if (priv->eip_type == EIP197 && ctx->base.ctxr) {
 		for (i = 0; i < ARRAY_SIZE(s0.state); i++) {
 			if (ctx->ipad[i] != le32_to_cpu(s0.state[i]) ||
 			    ctx->opad[i] != le32_to_cpu(s1.state[i])) {
-- 
2.7.4

