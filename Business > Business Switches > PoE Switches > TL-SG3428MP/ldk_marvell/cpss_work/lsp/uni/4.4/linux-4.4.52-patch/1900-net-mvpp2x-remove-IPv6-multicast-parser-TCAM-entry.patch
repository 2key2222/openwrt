From bc7ecb97e00f58e3614602099ce37158899601a3 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Thu, 10 Aug 2017 16:57:14 +0300
Subject: [PATCH 1900/2241] net: mvpp2x: remove IPv6 multicast parser TCAM
 entry

IPv6 multicast parser TCAM is redundant since all multicast frames
matched by regular multicast TCAM entry.

The IEEE 802.3 has specified that all Ethernet frames with a value
of 1 in the least-significant bit of the first octet of the destination
address are treated as multicast frame. This rule is applied by
regular multicast TCAM entry.

- RFC2464 has specified that all frame whose first two octets are the
  value 0x3333 are multicast IPv6 frames.
- RFC1112 has specified that all frame whose first three octets are the
  value 0x01005E are multicast IPv4 frames.

RFC2464 and RFC1112 are subsets of IEEE 802.3. There are no need to keep
specific TCAM entry for RFC2464.

This patch doesn't make any functional changes.

Change-Id: I1024a996adf1cb168a9376325a54e1c18c56b52d
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/42875
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Alan Winkowski <walan@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c      | 1 -
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h | 5 ++---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c    | 5 -----
 3 files changed, 2 insertions(+), 9 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
index 9181562..6e9720c 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw.c
@@ -1711,7 +1711,6 @@ static void mv_pp2x_prs_mac_init(struct mv_pp2x_hw *hw)
 	mv_pp2x_prs_mac_promisc_set(hw, 0, false);
 
 	mv_pp2x_prs_mac_multi_set(hw, 0, MVPP2_PE_MAC_MC_ALL, false);
-	mv_pp2x_prs_mac_multi_set(hw, 0, MVPP2_PE_MAC_MC_IP6, false);
 }
 
 /* Set default entries for various types of dsa packets */
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
index 5ca506a..cb21ecb 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_hw_type.h
@@ -1355,11 +1355,10 @@ enum mv_pp2x_tag_type {
 #define MVPP2_PE_FIRST_FREE_TID		1
 #define MVPP2_PE_MAC_RANGE_END		(MVPP2_PE_VID_FILT_RANGE_START - 1)
 #define MVPP2_PE_MAC_RANGE_START	(MVPP2_PE_MAC_RANGE_END - MVPP2_PRS_MAC_RANGE_SIZE + 1)
-#define MVPP2_PE_VID_FILT_RANGE_END	(MVPP2_PRS_TCAM_SRAM_SIZE - 31)
+#define MVPP2_PE_VID_FILT_RANGE_END	(MVPP2_PRS_TCAM_SRAM_SIZE - 30)
 #define MVPP2_PE_VID_FILT_RANGE_START	(MVPP2_PE_VID_FILT_RANGE_END - MVPP2_PRS_VLAN_FILT_RANGE_SIZE + 1)
 #define MVPP2_PE_LAST_FREE_TID		(MVPP2_PE_MAC_RANGE_START - 1)
-#define MVPP2_PE_IP6_EXT_PROTO_UN	(MVPP2_PRS_TCAM_SRAM_SIZE - 30)
-#define MVPP2_PE_MAC_MC_IP6		(MVPP2_PRS_TCAM_SRAM_SIZE - 29)
+#define MVPP2_PE_IP6_EXT_PROTO_UN	(MVPP2_PRS_TCAM_SRAM_SIZE - 29)
 #define MVPP2_PE_IP6_ADDR_UN		(MVPP2_PRS_TCAM_SRAM_SIZE - 28)
 #define MVPP2_PE_IP4_ADDR_UN		(MVPP2_PRS_TCAM_SRAM_SIZE - 27)
 #define MVPP2_PE_LAST_DEFAULT_FLOW	(MVPP2_PRS_TCAM_SRAM_SIZE - 26)
diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 0a28b1a..eeb05fe 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -4079,7 +4079,6 @@ static void mv_pp2x_set_rx_promisc(struct mv_pp2x_port *port)
 
 	/* Accept all: Multicast + Unicast */
 	mv_pp2x_prs_mac_multi_set(hw, id, MVPP2_PE_MAC_MC_ALL, true);
-	mv_pp2x_prs_mac_multi_set(hw, id, MVPP2_PE_MAC_MC_IP6, true);
 	/* Enter promisc mode */
 	mv_pp2x_prs_mac_promisc_set(hw, id, true);
 	/* Remove all port->id's mcast enries */
@@ -4096,8 +4095,6 @@ static void mv_pp2x_set_rx_allmulti(struct mv_pp2x_port *port)
 	/* Accept all multicast */
 	mv_pp2x_prs_mac_multi_set(hw, id,
 				  MVPP2_PE_MAC_MC_ALL, true);
-	mv_pp2x_prs_mac_multi_set(hw, id,
-				  MVPP2_PE_MAC_MC_IP6, true);
 	/* Remove all multicast filter entries from parser */
 	mv_pp2x_prs_mac_entry_del(port, MVPP2_PRS_MAC_MC, MVPP2_DEL_MAC_ALL);
 }
@@ -4168,8 +4165,6 @@ static void mv_pp2x_set_rx_mode(struct net_device *dev)
 			/* Reject other MC mac entries */
 			mv_pp2x_prs_mac_multi_set(hw, id,
 						  MVPP2_PE_MAC_MC_ALL, false);
-			mv_pp2x_prs_mac_multi_set(hw, id,
-						  MVPP2_PE_MAC_MC_IP6, false);
 		}
 	}
 }
-- 
2.7.4

