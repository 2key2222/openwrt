From 21419acabd46a270082c2357f69d013354cf9c8a Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 7 Nov 2017 10:10:56 +0200
Subject: [PATCH 2072/2241] fix: net: mvpp2x: fix BM pool add and remove order

Issue:
Wrong BM pool add and remove order caused drain of short pool
if jumbo mtu were set.
Issue caused short packets drop on system with single
kernel port on CPN.

Fix:
Change BM pool add and remove order.

Change-Id: Ie6d9c1bb42c739261f483a52222b44e2fc748199
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45967
Reviewed-by: Nadav Haklai <nadavh@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/46289
Reviewed-by: Marcin Wojtas <mw@semihalf.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index d5372e0..8a66fe7 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -775,6 +775,13 @@ static int mv_pp2x_bm_update_mtu(struct net_device *dev, int mtu)
 	}
 
 	if (new_long_pool != old_long_pool) {
+		/* Remove port from old short&long pool */
+		mv_pp2x_bm_pool_stop_use(port, old_long_pool);
+		old_long_port_pool->port_map &= ~(1 << port->id);
+
+		mv_pp2x_bm_pool_stop_use(port, old_short_pool);
+		old_short_port_pool->port_map &= ~(1 << port->id);
+
 		/* Add port to new short&long pool */
 		port->pool_long = mv_pp2x_bm_pool_use(port, new_long_pool);
 		if (!port->pool_long)
@@ -792,13 +799,6 @@ static int mv_pp2x_bm_update_mtu(struct net_device *dev, int mtu)
 			port->priv->pp2xdata->mv_pp2x_rxq_short_pool_set(hw,
 			port->rxqs[rxq]->id, port->pool_short->id);
 
-		/* Remove port from old short&long pool */
-		mv_pp2x_bm_pool_stop_use(port, old_long_pool);
-		old_long_port_pool->port_map &= ~(1 << port->id);
-
-		mv_pp2x_bm_pool_stop_use(port, old_short_pool);
-		old_short_port_pool->port_map &= ~(1 << port->id);
-
 		/* Update L4 checksum when jumbo enable/disable on port */
 		if (new_long_pool == MVPP2_BM_SWF_JUMBO_POOL) {
 			if (port->id != port->priv->l4_chksum_jumbo_port) {
-- 
2.7.4

