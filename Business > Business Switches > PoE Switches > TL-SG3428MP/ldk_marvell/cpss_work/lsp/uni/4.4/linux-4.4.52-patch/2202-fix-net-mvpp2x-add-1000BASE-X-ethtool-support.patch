From d2031e0db0d060b774a9412003b4f37feadee44a Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Sun, 7 Jan 2018 23:38:42 +0200
Subject: [PATCH 2202/2241] fix: net: mvpp2x: add 1000BASE-X ethtool support

1000BASE-X has common with other 1G phy modes ethtool configurations.

Change-Id: Ic5c5e6415fb81b2550c79cd9e3a044e7cb3f6249
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/48619
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Tested-by: Yan Markman <ymarkman@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
index 631f770..0714bda 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_ethtool.c
@@ -286,6 +286,7 @@ int mv_pp2x_eth_tool_nway_reset(struct net_device *dev)
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		err = mv_gop110_check_port_type(gop, mac->gop_index);
 		if (err) {
 			pr_err("GOP %d set to 1000Base-X\n", mac->gop_index);
@@ -329,6 +330,7 @@ static void mv_pp2x_get_pauseparam(struct net_device *dev,
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		mv_gop110_port_link_status(gop,	mac, &status);
 		pause->autoneg =
 			(status.autoneg_fc ? AUTONEG_ENABLE : AUTONEG_DISABLE);
@@ -383,6 +385,7 @@ static int mv_pp2x_set_pauseparam(struct net_device *dev,
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		if (mac->speed == SPEED_2500) {
 			err = mv_gop110_check_port_type(gop, gop_port);
 			if (err) {
@@ -588,6 +591,7 @@ static int mv_pp2x_ethtool_set_settings(struct net_device *dev,
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		err = mv_pp2x_autoneg_gmac_check_valid(mac, gop, cmd, &status);
 		if (err < 0)
 			return err;
@@ -983,6 +987,7 @@ static int mv_pp2x_ethtool_get_regs_len(struct net_device *dev)
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		return MV_PP2_REGS_GMAC_LEN * sizeof(u32);
 	case PHY_INTERFACE_MODE_XAUI:
 	case PHY_INTERFACE_MODE_RXAUI:
@@ -1018,6 +1023,7 @@ static void mv_pp2x_ethtool_get_regs(struct net_device *dev,
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		memset(p, 0, MV_PP2_REGS_GMAC_LEN * sizeof(u32));
 		mv_gop110_gmac_registers_dump(port, p);
 	break;
@@ -1162,6 +1168,7 @@ static void mv_pp2x_eth_tool_diag_test(struct net_device *netdev,
 	case PHY_INTERFACE_MODE_RGMII:
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 	break;
 	case PHY_INTERFACE_MODE_XAUI:
 	case PHY_INTERFACE_MODE_RXAUI:
-- 
2.7.4

