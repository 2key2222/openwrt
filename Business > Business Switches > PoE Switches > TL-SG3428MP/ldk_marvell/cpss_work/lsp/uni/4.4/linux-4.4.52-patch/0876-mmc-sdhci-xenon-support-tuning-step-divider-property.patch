From 32cf297d48d815ee402d302359a7f0ee8769921f Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Thu, 25 Aug 2016 01:11:02 +0800
Subject: [PATCH 0876/2241] mmc: sdhci-xenon: support tuning step divider
 property in DTS

This DTS property is used to set tuning step divider.
It will be default to 64 if do not set it in DTS.
HW DLL will generate the tuning step value, then the driver
applies it to tuning step register after divider.
The divider value is based on testing.
Now all the SoC using XENON IP work at common divider value 64.
However since the timing is also relevant to board, it is better to
provide this configuration in DTS for customer to test and find the right
divider value if the common divider value 64 does not work on their
platform.

Change-Id: I3a5cde545b47ea7d0de25f8d0726dc5eb83d9059
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/32168
Tested-by: Star_Automation <star@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 Documentation/devicetree/bindings/mmc/marvell,xenon-sdhci.txt | 10 ++++++++++
 drivers/mmc/host/sdhci-xenon-phy.c                            | 10 +++++++++-
 drivers/mmc/host/sdhci-xenon.h                                |  2 ++
 3 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/mmc/marvell,xenon-sdhci.txt b/Documentation/devicetree/bindings/mmc/marvell,xenon-sdhci.txt
index 8c0d56a..f3a8ccf 100644
--- a/Documentation/devicetree/bindings/mmc/marvell,xenon-sdhci.txt
+++ b/Documentation/devicetree/bindings/mmc/marvell,xenon-sdhci.txt
@@ -58,6 +58,16 @@ Optional Properties:
   Valid range = [1:7]. Set as 0x4 by default if this property is not provided.
   - xenon,phy-nr-tun-times = <nr_times>;
 
+  Divider for TUN_STEP
+  Set the divider for calculating TUN_STEP.
+  Set as 64 by default if this property is not provided.
+  HW DLL will generate the tuning step value, then the driver applies it to
+  tuning step register after divider. The divider value is based on testing.                                                                                    Now all the SoC using XENON IP work at common divider value 64.
+  However since the timing is also relevant to board, it is better to
+  provide this configuration in DTS for customer to test and find the right
+  divider value if the common divider value 64 does not work on their platform.
+  - xenon,phy-tun-step-divider = <divider>;
+
 - Re-tuning Counter
   Xenon SDHC SOC usually doesn't provide re-tuning counter in
   Capabilities Register 3 Bit[11:8].
diff --git a/drivers/mmc/host/sdhci-xenon-phy.c b/drivers/mmc/host/sdhci-xenon-phy.c
index 51dc8bd6..cecd7f0 100644
--- a/drivers/mmc/host/sdhci-xenon-phy.c
+++ b/drivers/mmc/host/sdhci-xenon-phy.c
@@ -65,6 +65,9 @@ struct emmc_phy_params {
 
 	/* Number of consecutive Sampling Points of a Valid Sampling Window */
 	u8 nr_tun_times;
+
+	/* Divider for calculating Tuning Step */
+	u8 tun_step_divider;
 };
 
 static void xenon_emmc_phy_strobe_delay_adj(struct sdhci_host *host,
@@ -132,6 +135,11 @@ static int emmc_phy_parse_param_dt(struct device_node *np,
 	else
 		params->nr_tun_times = TUN_CONSECUTIVE_TIMES;
 
+	if (!of_property_read_u32(np, "xenon,phy-tun-step-divider", &value))
+		params->tun_step_divider = value & 0xFF;
+	else
+		params->tun_step_divider = TUNING_STEP_DIVIDER;
+
 	return 0;
 }
 static int xenon_emmc_phy_init(struct sdhci_host *host)
@@ -481,7 +489,7 @@ static void xenon_emmc_phy_config_tuning(struct sdhci_host *host)
 	}
 
 	reg = sdhci_readl(host, SDHC_SLOT_DLL_CUR_DLY_VAL);
-	tuning_step = reg / 40;
+	tuning_step = reg / params->tun_step_divider;
 	if (unlikely(tuning_step > TUNING_STEP_MASK)) {
 		WARN("%s: HS200 TUNING_STEP %d is larger than MAX value\n",
 					mmc_hostname(host->mmc), tuning_step);
diff --git a/drivers/mmc/host/sdhci-xenon.h b/drivers/mmc/host/sdhci-xenon.h
index 07fac3a..65275fe 100644
--- a/drivers/mmc/host/sdhci-xenon.h
+++ b/drivers/mmc/host/sdhci-xenon.h
@@ -47,6 +47,8 @@
 #define TUNING_STEP_SHIFT			12
 #define TUNING_STEP_MASK			0xf
 
+#define TUNING_STEP_DIVIDER			64
+
 #define FORCE_SEL_INVERSE_CLK_SHIFT		11
 
 #define SDHC_SLOT_eMMC_CTRL			0x0130
-- 
2.7.4

