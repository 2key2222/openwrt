From 5cc22beb5081aa33da0d72b0e6b5f63b5afe317d Mon Sep 17 00:00:00 2001
From: David Sniatkiwicz <davidsn@marvell.com>
Date: Wed, 10 Jan 2018 17:37:04 +0200
Subject: [PATCH 2179/2241] dts: cp110: update pcie address labeling

This patch updates PCIe address labeling as part
of the preparations for armada8k-plus support.

Armada8k & Armada8k-plus have different PCIe MEM/IO
mapping, this patch allows each device to define the
correct values of:
	- CP110_PCIE_MEM_SIZE
	- CP110_PCIEx_CPU_IO_BASE
	- CP110_PCIEx_CPU_MEM_BASE
	- CP110_PCIEx_BUS_IO_BASE
	- CP110_PCIEx_BUS_MEM_BASE
	- CP110_PCIE_BUS_MEM_CFG

Change-Id: I2ef835de6f05cd46bcc2e1531fb353f21c213bc5
Signed-off-by: David Sniatkiwicz <davidsn@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/48830
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: Omri Itach <omrii@marvell.com>
---
 arch/arm64/boot/dts/marvell/armada-7020.dtsi  | 26 +++++----
 arch/arm64/boot/dts/marvell/armada-7040.dtsi  | 24 +++++---
 arch/arm64/boot/dts/marvell/armada-8020.dtsi  | 49 ++++++++++------
 arch/arm64/boot/dts/marvell/armada-8040.dtsi  | 49 ++++++++++------
 arch/arm64/boot/dts/marvell/armada-cp110.dtsi | 83 +++++++++++++++------------
 5 files changed, 137 insertions(+), 94 deletions(-)

diff --git a/arch/arm64/boot/dts/marvell/armada-7020.dtsi b/arch/arm64/boot/dts/marvell/armada-7020.dtsi
index 194aaa7..8bc26f7 100644
--- a/arch/arm64/boot/dts/marvell/armada-7020.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-7020.dtsi
@@ -51,23 +51,27 @@
 #include "armada-ap806-dual.dtsi"
 
 /* CP110-0 Settings */
-#define CP110_NAME		cp0
-#define CP110_NUM		0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+#define CP110_NAME				cp0
+#define CP110_NUM				0
+#define CP110_BASE				0xf2000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xf9000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xf6000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
-#undef CP110_SPI_BUS_ID
-#undef CP110_PCIE_MEM_OFFSET
-#undef CP110_EIP197_INDEX
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 
 &cp0_thermal {
 	/* interrupt assignment by ICU supports single thermal sensor unit,
diff --git a/arch/arm64/boot/dts/marvell/armada-7040.dtsi b/arch/arm64/boot/dts/marvell/armada-7040.dtsi
index 835a0b7..2f9b258 100644
--- a/arch/arm64/boot/dts/marvell/armada-7040.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-7040.dtsi
@@ -60,21 +60,27 @@
 #define XOR_MSI_PARENT(XOR_NUM) <&gic_v2m0>
 
 /* CP110-0 Settings */
-#define CP110_NAME		cp0
-#define CP110_NUM		0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+#define CP110_NAME				cp0
+#define CP110_NUM				0
+#define CP110_BASE				0xf2000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xf9000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xf6000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
-#undef CP110_PCIE_MEM_OFFSET
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 #undef CP110_SPI_BUS_ID
 #undef CP110_EIP197_INDEX
 
diff --git a/arch/arm64/boot/dts/marvell/armada-8020.dtsi b/arch/arm64/boot/dts/marvell/armada-8020.dtsi
index ab99a69..655fbda 100644
--- a/arch/arm64/boot/dts/marvell/armada-8020.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-8020.dtsi
@@ -51,21 +51,27 @@
 #include "armada-ap806-dual.dtsi"
 
 /* CP110-0 Settings */
-#define CP110_NAME		cp0
-#define CP110_NUM		0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+#define CP110_NAME				cp0
+#define CP110_NUM				0
+#define CP110_BASE				0xf2000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xf9000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xf6000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_OFFSET
-#undef CP110_PCIE_MEM_BASE
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 
 &cp0_thermal {
 	/* interrupt assignment by ICU supports single thermal sensor unit,
@@ -89,21 +95,28 @@
 };
 
 /* CP110-1 Settings */
-#define CP110_NAME		cp1
-#define CP110_NUM		1
-#define CP110_BASE              0xf4000000
-#define CP110_PCIE_MEM_BASE     0xfa000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xfd000000
+#define CP110_NAME				cp1
+#define CP110_NUM				1
+#define CP110_BASE				0xf4000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xfd000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xfa000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
+
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_OFFSET
-#undef CP110_PCIE_MEM_BASE
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 
 &cp1_emac0 {
 	mac-address = [00 00 00 00 00 04];
diff --git a/arch/arm64/boot/dts/marvell/armada-8040.dtsi b/arch/arm64/boot/dts/marvell/armada-8040.dtsi
index 6e3f2b4..f89c1c8 100644
--- a/arch/arm64/boot/dts/marvell/armada-8040.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-8040.dtsi
@@ -51,21 +51,27 @@
 #include "armada-ap806-quad.dtsi"
 
 /* CP110-0 Settings */
-#define CP110_NAME		cp0
-#define CP110_NUM		0
-#define CP110_BASE              0xf2000000
-#define CP110_PCIE_MEM_BASE     0xf6000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xf9000000
+#define CP110_NAME				cp0
+#define CP110_NUM				0
+#define CP110_BASE				0xf2000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xf9000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xf6000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
-#undef CP110_PCIE_MEM_OFFSET
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 
 &cp0_thermal {
 	/* interrupt assignment by ICU supports single thermal sensor unit,
@@ -89,21 +95,28 @@
 };
 
 /* CP110-1 Settings */
-#define CP110_NAME		cp1
-#define CP110_NUM		1
-#define CP110_BASE              0xf4000000
-#define CP110_PCIE_MEM_BASE     0xfa000000
-#define CP110_PCIE_MEM_OFFSET	0x1000000
-#define CP110_PCIE_IO_BASE      0xfd000000
+#define CP110_NAME				cp1
+#define CP110_NUM				1
+#define CP110_BASE				0xf4000000
+#define CP110_PCIE_MEM_SIZE			0xf00000
+#define CP110_PCIEx_CPU_IO_BASE(iface)		(0xfd000000 + (iface) *  0x10000)
+#define CP110_PCIEx_CPU_MEM_BASE(iface)		(0xfa000000 + (iface) *  0x1000000)
+#define CP110_PCIEx_BUS_IO_BASE(iface)		(CP110_PCIEx_CPU_IO_BASE(iface))
+#define CP110_PCIEx_BUS_MEM_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface))
+#define CP110_PCIE_BUS_MEM_CFG			(0x82000000)
+
 
 #include "armada-cp110.dtsi"
 
 #undef CP110_NAME
 #undef CP110_NUM
 #undef CP110_BASE
-#undef CP110_PCIE_IO_BASE
-#undef CP110_PCIE_MEM_BASE
-#undef CP110_PCIE_MEM_OFFSET
+#undef CP110_PCIE_MEM_SIZE
+#undef CP110_PCIEx_CPU_IO_BASE
+#undef CP110_PCIEx_CPU_MEM_BASE
+#undef CP110_PCIEx_BUS_IO_BASE
+#undef CP110_PCIEx_BUS_MEM_BASE
+#undef CP110_PCIE_BUS_MEM_CFG
 
 &cp1_emac0 {
 	mac-address = [00 00 00 00 00 04];
diff --git a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
index 4b94216..9961d92 100644
--- a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
@@ -19,30 +19,16 @@
 #include <dt-bindings/interrupt-controller/mvebu-icu.h>
 #include <dt-bindings/phy/phy-utmi-mvebu.h>
 
-#define CP110_BASE_HIGH			((CP110_BASE >> 32) & 0xffffffff)
-#define CP110_BASE_LOW			(CP110_BASE & 0xffffffff)
+#define U64_TO_U32_H(addr)			(((addr) >> 32) & 0xffffffff)
+#define U64_TO_U32_L(addr)			((addr) & 0xffffffff)
 
-#define CP110_PCIEx_IO_BASE_H(iface)	((CP110_PCIE_IO_BASE >> 32) & 0xffffffff)
-#define CP110_PCIEx_IO_BASE_L(iface)	((CP110_PCIE_IO_BASE & 0xffffffff) + (iface *  0x10000))
+#define CP110_PCIEx_REG0_BASE(iface)		(CP110_BASE + 0x600000 + (iface) * 0x20000)
+#define CP110_PCIEx_REG1_BASE(iface)		(CP110_PCIEx_CPU_MEM_BASE(iface) + CP110_PCIE_MEM_SIZE)
 
-#define CP110_PCIEx_MEM_BASE_H(iface)	((CP110_PCIE_MEM_BASE >> 32) & 0xffffffff)
-#define CP110_PCIEx_MEM_BASE_L(iface)	((CP110_PCIE_MEM_BASE & 0xffffffff) + (iface *  CP110_PCIE_MEM_OFFSET))
+#define CP110_PCIE_EP_REG_BASE(num)		(CP110_BASE + 0x600000 + (num) * 0x4000)
 
-#define CP110_PCIEx_REG0_BASE_H(iface)	(CP110_BASE_HIGH)
-#define CP110_PCIEx_REG0_BASE_L(iface)	(CP110_BASE_LOW + 0x600000 + (iface * 0x20000))
-
-#define CP110_PCIEx_REG1_BASE_H(iface)	(CP110_PCIEx_MEM_BASE_H(iface))
-#define CP110_PCIEx_REG1_BASE_L(iface)	(CP110_PCIEx_MEM_BASE_L(iface) + 0xf00000)
-
-#define CP110_PCIE_EP_REG0_BASE_H	(CP110_BASE_HIGH)
-#define CP110_PCIE_EP_REG0_BASE_L	(CP110_BASE_LOW + 0x600000)
-#define CP110_PCIE_EP_REG1_BASE_H	(CP110_BASE_HIGH)
-#define CP110_PCIE_EP_REG1_BASE_L	(CP110_BASE_LOW + 0x608000)
-#define CP110_PCIE_EP_REG2_BASE_H	(CP110_BASE_HIGH)
-#define CP110_PCIE_EP_REG2_BASE_L	(CP110_BASE_LOW + 0x604000)
-
-#define CP110_EIP197_INDEX	CP110_NUM
-#define CP110_SPI_BUS_ID(n)	((CP110_NUM * 2) + (n))
+#define CP110_EIP197_INDEX			CP110_NUM
+#define CP110_SPI_BUS_ID(n)			((CP110_NUM * 2) + (n))
 
 / {
 	CP110_NAME {
@@ -56,7 +42,7 @@
 			#address-cells = <1>;
 			#size-cells = <1>;
 			compatible = "simple-bus";
-			ranges = <0x0 CP110_BASE_HIGH CP110_BASE_LOW 0x2000000>;
+			ranges = <0x0 U64_TO_U32_H(CP110_BASE) U64_TO_U32_L(CP110_BASE) 0x2000000>;
 
 			CP110_LABEL(syscon0): system-controller@440000 {
 				compatible = "marvell,cp110-system-controller0", "syscon";
@@ -565,9 +551,10 @@
 
 		CP110_LABEL(pcie_ep): pcie-ep@600000 {
 			compatible = "marvell,armada8k-pcie-ep", "snps,dw-pcie";
-			reg = <CP110_PCIE_EP_REG0_BASE_H CP110_PCIE_EP_REG0_BASE_L 0 0x4000>,
-			      <CP110_PCIE_EP_REG1_BASE_H CP110_PCIE_EP_REG1_BASE_L 0 0x80000>,
-			      <CP110_PCIE_EP_REG2_BASE_H CP110_PCIE_EP_REG2_BASE_L 0 0x1000>;
+			reg =
+			   <U64_TO_U32_H(CP110_PCIE_EP_REG_BASE(0)) U64_TO_U32_L(CP110_PCIE_EP_REG_BASE(0)) 0 0x4000>,
+			   <U64_TO_U32_H(CP110_PCIE_EP_REG_BASE(2)) U64_TO_U32_L(CP110_PCIE_EP_REG_BASE(2)) 0 0x80000>,
+			   <U64_TO_U32_H(CP110_PCIE_EP_REG_BASE(1)) U64_TO_U32_L(CP110_PCIE_EP_REG_BASE(1)) 0 0x1000>;
 			reg-names = "core", "lm", "shadow_core";
 			clocks = <&CP110_LABEL(syscon0) 1 13>;
 			status = "disabled";
@@ -575,8 +562,10 @@
 
 		CP110_LABEL(pcie0): pcie0@600000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(0) CP110_PCIEx_REG0_BASE_L(0) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(0) CP110_PCIEx_REG1_BASE_L(0) 0 0x80000>;	/* Last 512KB of mem space */
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(0)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(0)) 0 0x10000>,
+			   /* Last 512KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(0)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(0)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -587,9 +576,14 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(0) CP110_PCIEx_IO_BASE_H(0) CP110_PCIEx_IO_BASE_L(0) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(0)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(0)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(0) CP110_PCIEx_MEM_BASE_H(0) CP110_PCIEx_MEM_BASE_L(0) 0 0xf00000>;
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(0)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(0))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(0)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			interrupt-map-mask = <0 0 0 0>;
 			interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 22 IRQ_TYPE_LEVEL_HIGH>;
 			interrupts = <ICU_GRP_NSR 22 IRQ_TYPE_LEVEL_HIGH>;
@@ -600,8 +594,10 @@
 
 		CP110_LABEL(pcie1): pcie1@620000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(1) CP110_PCIEx_REG0_BASE_L(1) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(1) CP110_PCIEx_REG1_BASE_L(1) 0 0x80000>;	/* Last 512KB of mem space */
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(1)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(1)) 0 0x10000>,
+			   /* Last 512KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(1)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(1)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -612,9 +608,14 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(1) CP110_PCIEx_IO_BASE_H(1) CP110_PCIEx_IO_BASE_L(1) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(1)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(1)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(1) CP110_PCIEx_MEM_BASE_H(1) CP110_PCIEx_MEM_BASE_L(1) 0 0xf00000>;
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(1)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(1))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(1)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			interrupt-map-mask = <0 0 0 0>;
 			interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 24 IRQ_TYPE_LEVEL_HIGH>;
 			interrupts = <ICU_GRP_NSR 24 IRQ_TYPE_LEVEL_HIGH>;
@@ -626,8 +627,10 @@
 
 		CP110_LABEL(pcie2): pcie2@640000 {
 			compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-			reg = <CP110_PCIEx_REG0_BASE_H(2) CP110_PCIEx_REG0_BASE_L(2) 0 0x10000>,
-			      <CP110_PCIEx_REG1_BASE_H(2) CP110_PCIEx_REG1_BASE_L(2) 0 0x80000>;	/* Last 64KB of mem space */
+			reg =
+			   <U64_TO_U32_H(CP110_PCIEx_REG0_BASE(2)) U64_TO_U32_L(CP110_PCIEx_REG0_BASE(2)) 0 0x10000>,
+			   /* Last 64KB of mem space */
+			   <U64_TO_U32_H(CP110_PCIEx_REG1_BASE(2)) U64_TO_U32_L(CP110_PCIEx_REG1_BASE(2)) 0 0x80000>;
 			reg-names = "ctrl", "config";
 			#address-cells = <3>;
 			#size-cells = <2>;
@@ -638,9 +641,14 @@
 			bus-range = <0 0xff>;
 			ranges =
 				/* downstream I/O */
-				<0x81000000 0 CP110_PCIEx_IO_BASE_L(2) CP110_PCIEx_IO_BASE_H(2) CP110_PCIEx_IO_BASE_L(2) 0 0x10000
+				<0x81000000 U64_TO_U32_H(CP110_PCIEx_BUS_IO_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_BUS_IO_BASE(2)) U64_TO_U32_H(CP110_PCIEx_CPU_IO_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_CPU_IO_BASE(2)) 0 0x10000
 				/* non-prefetchable memory */
-				 0x82000000 0 CP110_PCIEx_MEM_BASE_L(2) CP110_PCIEx_MEM_BASE_H(2) CP110_PCIEx_MEM_BASE_L(2) 0 0xf00000>;
+				CP110_PCIE_BUS_MEM_CFG U64_TO_U32_H(CP110_PCIEx_BUS_MEM_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_BUS_MEM_BASE(2)) U64_TO_U32_H(CP110_PCIEx_CPU_MEM_BASE(2))
+				U64_TO_U32_L(CP110_PCIEx_CPU_MEM_BASE(2)) U64_TO_U32_H(CP110_PCIE_MEM_SIZE)
+				U64_TO_U32_L(CP110_PCIE_MEM_SIZE)>;
 			interrupt-map-mask = <0 0 0 0>;
 			interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 23 IRQ_TYPE_LEVEL_HIGH>;
 			interrupts = <ICU_GRP_NSR 23 IRQ_TYPE_LEVEL_HIGH>;
@@ -651,4 +659,3 @@
 		};
 	};
 };
-
-- 
2.7.4

