From deda6634032884221f90272862ec1ec03654acd8 Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Wed, 6 Sep 2017 14:12:19 +0300
Subject: [PATCH 1992/2241] fix: net: mvpp2x: skip skb recycling for not IRQ
 freeable skb's

This patch fix out of memory crashes on automation benchmark tests.

Fix:
 - Do not recycle skb if it's not IRQ freeable and tracked by
   Netfilter skb->nfct.

Change-Id: I151c493eaa2b0797ba946e2035af193d7a4aa03b
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/43837
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index d2c6792..a5ca00d9 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -1095,12 +1095,15 @@ static void mv_pp2x_txq_bufs_free(struct mv_pp2x_port *port,
 			skb &= ~MVPP2_ETH_SHADOW_REC;
 			skb_rec = (struct sk_buff *)skb;
 			bm_pool = &port->priv->bm_pools[MVPP2X_SKB_BPID_GET(skb_rec)];
-			/* Do not release buffer of recycled skb */
-			skb_rec->head = NULL;
 			cp_pcpu->in_use[bm_pool->id]--;
-
-			mv_pp2_skb_pool_put(port, (struct sk_buff *)skb, txq_pcpu->cpu);
-
+			/* Do not release buffer of recycled skb */
+			if (!skb_irq_freeable(skb_rec)) {
+				skb_rec->head = NULL;
+				dev_kfree_skb_any(skb_rec);
+			} else {
+				skb_rec->head = NULL;
+				mv_pp2_skb_pool_put(port, skb_rec, txq_pcpu->cpu);
+			}
 			mv_pp2x_txq_inc_get(txq_pcpu);
 			continue;
 		}
-- 
2.7.4

