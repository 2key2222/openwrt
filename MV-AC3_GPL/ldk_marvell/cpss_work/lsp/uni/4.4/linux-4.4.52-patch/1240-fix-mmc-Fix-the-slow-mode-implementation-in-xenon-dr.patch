From 5ef48f1aa5335ed1e478dcacbbf3dc36e3a17944 Mon Sep 17 00:00:00 2001
From: Konstantin Porotchkin <kostap@marvell.com>
Date: Thu, 22 Dec 2016 16:55:03 +0200
Subject: [PATCH 1240/2241] fix: mmc: Fix the slow mode implementation in xenon
 driver v4

The mainline Xenon driver v4 is still missing the right
implementation of PHY slow mode configuration that allows
properly running SDIO interface on AP side.
This patch applies required changes to the manline v4
driver:
1. Set the controller slow mode bit in PHY init function if
it requested by the DTS configuration
2. Eliminate scary kernel warnings for eMMC clocks lower than 50MHz

Change-Id: I05a943fa5e63839c4285a289b17db5c79815c007
Signed-off-by: Konstantin Porotchkin <kostap@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34943
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 drivers/mmc/host/sdhci-xenon-phy.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/mmc/host/sdhci-xenon-phy.c b/drivers/mmc/host/sdhci-xenon-phy.c
index 8b06bad..42ef3ad 100644
--- a/drivers/mmc/host/sdhci-xenon-phy.c
+++ b/drivers/mmc/host/sdhci-xenon-phy.c
@@ -233,9 +233,12 @@ static int emmc_phy_init(struct sdhci_host *host)
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct sdhci_xenon_priv *priv = sdhci_pltfm_priv(pltfm_host);
 	struct xenon_emmc_phy_regs *phy_regs = priv->emmc_phy_regs;
+	struct emmc_phy_params *params = priv->phy_params;
 
 	reg = sdhci_readl(host, phy_regs->timing_adj);
 	reg |= SDHCI_PHY_INITIALIZAION;
+	if (params->slow_mode)
+		reg |= SDHCI_TIMING_ADJUST_SLOW_MODE;
 	sdhci_writel(host, reg, phy_regs->timing_adj);
 
 	/* Add duration of FC_SYNC_RST */
@@ -325,8 +328,12 @@ static int emmc_phy_enable_dll(struct sdhci_host *host)
 	struct sdhci_pltfm_host *pltfm_host = sdhci_priv(host);
 	struct sdhci_xenon_priv *priv = sdhci_pltfm_priv(pltfm_host);
 	struct xenon_emmc_phy_regs *phy_regs = priv->emmc_phy_regs;
+	struct emmc_phy_params *params = priv->phy_params;
 	u8 timeout;
 
+	if (params->slow_mode && (host->clock <= MMC_HIGH_52_MAX_DTR))
+		return 0;
+
 	if (WARN_ON(host->clock <= MMC_HIGH_52_MAX_DTR))
 		return -EINVAL;
 
@@ -381,6 +388,9 @@ static int emmc_phy_config_tuning(struct sdhci_host *host)
 	int ret;
 	unsigned long flags;
 
+	if (params->slow_mode && (host->clock <= MMC_HIGH_52_MAX_DTR))
+		return 0;
+
 	if (WARN_ON(host->clock <= MMC_HIGH_52_MAX_DTR))
 		return -EINVAL;
 
-- 
2.7.4

