From c95ebcfa1425ebe7d8206abdbaf1c9686f751f84 Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Wed, 8 Nov 2017 11:48:18 +0200
Subject: [PATCH 2067/2241] mvebu: dts: cp110: add support for configuration
 space more than 32bit

Split the CP110 base address to high & low to update the ranges and regs
in the different node.

Change-Id: I48a72ca9f6f1d24d8472281d9c2eef54c4faa4bc
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/46055
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 arch/arm64/boot/dts/marvell/armada-cp110.dtsi | 60 +++++++++++++++++----------
 1 file changed, 37 insertions(+), 23 deletions(-)

diff --git a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
index d0f057c..38c283b 100644
--- a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
@@ -19,19 +19,33 @@
 #include <dt-bindings/interrupt-controller/mvebu-icu.h>
 #include <dt-bindings/phy/phy-utmi-mvebu.h>
 
-#define CP110_PCIEx_IO_BASE(iface)	(CP110_PCIE_IO_BASE + (iface *  0x10000))
-#define CP110_PCIEx_MEM_BASE(iface)	(CP110_PCIE_MEM_BASE + (iface *  0x1000000))
-#define CP110_PCIEx_REG0_BASE(iface)	(CP110_BASE + 0x600000 + (iface) * 0x20000)
-#define CP110_PCIEx_REG1_BASE(iface)	(CP110_PCIEx_MEM_BASE(iface) + 0xf00000)
-#define CP110_PCIE_EP_REG0_BASE		(CP110_BASE + 0x600000)
-#define CP110_PCIE_EP_REG1_BASE		(CP110_BASE + 0x608000)
-#define CP110_PCIE_EP_REG2_BASE		(CP110_BASE + 0x604000)
+#define CP110_BASE_HIGH			((CP110_BASE >> 32) & 0xffffffff)
+#define CP110_BASE_LOW			(CP110_BASE & 0xffffffff)
+
+#define CP110_PCIEx_IO_BASE_H(iface)	((CP110_PCIE_IO_BASE >> 32) & 0xffffffff)
+#define CP110_PCIEx_IO_BASE_L(iface)	((CP110_PCIE_IO_BASE & 0xffffffff) + (iface *  0x10000))
+
+#define CP110_PCIEx_MEM_BASE_H(iface)	((CP110_PCIE_MEM_BASE >> 32) & 0xffffffff)
+#define CP110_PCIEx_MEM_BASE_L(iface)	((CP110_PCIE_MEM_BASE & 0xffffffff) + (iface *  0x1000000))
+
+#define CP110_PCIEx_REG0_BASE_H(iface)	(CP110_BASE_HIGH)
+#define CP110_PCIEx_REG0_BASE_L(iface)	(CP110_BASE_LOW + 0x600000 + (iface * 0x20000))
+
+#define CP110_PCIEx_REG1_BASE_H(iface)	(CP110_PCIEx_MEM_BASE_H(iface))
+#define CP110_PCIEx_REG1_BASE_L(iface)	(CP110_PCIEx_MEM_BASE_L(iface) + 0xf00000)
+
+#define CP110_PCIE_EP_REG0_BASE_H	(CP110_BASE_HIGH)
+#define CP110_PCIE_EP_REG0_BASE_L	(CP110_BASE_LOW + 0x600000)
+#define CP110_PCIE_EP_REG1_BASE_H	(CP110_BASE_HIGH)
+#define CP110_PCIE_EP_REG1_BASE_L	(CP110_BASE_LOW + 0x608000)
+#define CP110_PCIE_EP_REG2_BASE_H	(CP110_BASE_HIGH)
+#define CP110_PCIE_EP_REG2_BASE_L	(CP110_BASE_LOW + 0x604000)
 
 config-space {
 	#address-cells = <1>;
 	#size-cells = <1>;
 	compatible = "simple-bus";
-	ranges = <0x0 0x0 CP110_BASE 0x2000000>;
+	ranges = <0x0 CP110_BASE_HIGH CP110_BASE_LOW 0x2000000>;
 
 	CP110_LABEL(syscon0): system-controller@440000 {
 		compatible = "marvell,cp110-system-controller0", "syscon";
@@ -525,9 +539,9 @@ config-space {
 
 CP110_LABEL(pcie_ep): pcie-ep@600000 {
 	compatible = "marvell,armada8k-pcie-ep", "snps,dw-pcie";
-	reg = <0 CP110_PCIE_EP_REG0_BASE 0 0x4000>,
-		  <0 CP110_PCIE_EP_REG1_BASE 0 0x80000>,
-		  <0 CP110_PCIE_EP_REG2_BASE 0 0x1000>;
+	reg = <CP110_PCIE_EP_REG0_BASE_H CP110_PCIE_EP_REG0_BASE_L 0 0x4000>,
+	      <CP110_PCIE_EP_REG1_BASE_H CP110_PCIE_EP_REG1_BASE_L 0 0x80000>,
+	      <CP110_PCIE_EP_REG2_BASE_H CP110_PCIE_EP_REG2_BASE_L 0 0x1000>;
 	reg-names = "core", "lm", "shadow_core";
 	clocks = <&CP110_LABEL(syscon0) 1 13>;
 	status = "disabled";
@@ -535,8 +549,8 @@ CP110_LABEL(pcie_ep): pcie-ep@600000 {
 
 CP110_LABEL(pcie0): pcie0@600000 {
 	compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-	reg = <0 CP110_PCIEx_REG0_BASE(0) 0 0x10000>,
-	      <0 CP110_PCIEx_REG1_BASE(0) 0 0x80000>;	/* Last 512KB of mem space */
+	reg = <CP110_PCIEx_REG0_BASE_H(0) CP110_PCIEx_REG0_BASE_L(0) 0 0x10000>,
+	      <CP110_PCIEx_REG1_BASE_H(0) CP110_PCIEx_REG1_BASE_L(0) 0 0x80000>;	/* Last 512KB of mem space */
 	reg-names = "ctrl", "config";
 	#address-cells = <3>;
 	#size-cells = <2>;
@@ -547,9 +561,9 @@ CP110_LABEL(pcie0): pcie0@600000 {
 	bus-range = <0 0xff>;
 	ranges =
 		/* downstream I/O */
-		<0x81000000 0 CP110_PCIEx_IO_BASE(0) 0 CP110_PCIEx_IO_BASE(0) 0 0x10000
+		<0x81000000 0 CP110_PCIEx_IO_BASE_L(0) CP110_PCIEx_IO_BASE_H(0) CP110_PCIEx_IO_BASE_L(0) 0 0x10000
 		/* non-prefetchable memory */
-		 0x82000000 0 CP110_PCIEx_MEM_BASE(0) 0 CP110_PCIEx_MEM_BASE(0) 0 0xf00000>;
+		 0x82000000 0 CP110_PCIEx_MEM_BASE_L(0) CP110_PCIEx_MEM_BASE_H(0) CP110_PCIEx_MEM_BASE_L(0) 0 0xf00000>;
 	interrupt-map-mask = <0 0 0 0>;
 	interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 22 IRQ_TYPE_LEVEL_HIGH>;
 	interrupts = <ICU_GRP_NSR 22 IRQ_TYPE_LEVEL_HIGH>;
@@ -560,8 +574,8 @@ CP110_LABEL(pcie0): pcie0@600000 {
 
 CP110_LABEL(pcie1): pcie1@620000 {
 	compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-	reg = <0 CP110_PCIEx_REG0_BASE(1) 0 0x10000>,
-	      <0 CP110_PCIEx_REG1_BASE(1) 0 0x80000>;	/* Last 512KB of mem space */
+	reg = <CP110_PCIEx_REG0_BASE_H(1) CP110_PCIEx_REG0_BASE_L(1) 0 0x10000>,
+	      <CP110_PCIEx_REG1_BASE_H(1) CP110_PCIEx_REG1_BASE_L(1) 0 0x80000>;	/* Last 512KB of mem space */
 	reg-names = "ctrl", "config";
 	#address-cells = <3>;
 	#size-cells = <2>;
@@ -572,9 +586,9 @@ CP110_LABEL(pcie1): pcie1@620000 {
 	bus-range = <0 0xff>;
 	ranges =
 		/* downstream I/O */
-		<0x81000000 0 CP110_PCIEx_IO_BASE(1) 0  CP110_PCIEx_IO_BASE(1) 0 0x10000
+		<0x81000000 0 CP110_PCIEx_IO_BASE_L(1) CP110_PCIEx_IO_BASE_H(1) CP110_PCIEx_IO_BASE_L(1) 0 0x10000
 		/* non-prefetchable memory */
-		 0x82000000 0 CP110_PCIEx_MEM_BASE(1) 0  CP110_PCIEx_MEM_BASE(1) 0 0xf00000>;
+		 0x82000000 0 CP110_PCIEx_MEM_BASE_L(1) CP110_PCIEx_MEM_BASE_H(1) CP110_PCIEx_MEM_BASE_L(1) 0 0xf00000>;
 	interrupt-map-mask = <0 0 0 0>;
 	interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 24 IRQ_TYPE_LEVEL_HIGH>;
 	interrupts = <ICU_GRP_NSR 24 IRQ_TYPE_LEVEL_HIGH>;
@@ -586,8 +600,8 @@ CP110_LABEL(pcie1): pcie1@620000 {
 
 CP110_LABEL(pcie2): pcie2@640000 {
 	compatible = "marvell,armada8k-pcie", "snps,dw-pcie";
-	reg = <0 CP110_PCIEx_REG0_BASE(2) 0 0x10000>,
-	      <0 CP110_PCIEx_REG1_BASE(2) 0 0x80000>;	/* Last 64KB of mem space */
+	reg = <CP110_PCIEx_REG0_BASE_H(2) CP110_PCIEx_REG0_BASE_L(2) 0 0x10000>,
+	      <CP110_PCIEx_REG1_BASE_H(2) CP110_PCIEx_REG1_BASE_L(2) 0 0x80000>;	/* Last 64KB of mem space */
 	reg-names = "ctrl", "config";
 	#address-cells = <3>;
 	#size-cells = <2>;
@@ -598,9 +612,9 @@ CP110_LABEL(pcie2): pcie2@640000 {
 	bus-range = <0 0xff>;
 	ranges =
 		/* downstream I/O */
-		<0x81000000 0 CP110_PCIEx_IO_BASE(2) 0  CP110_PCIEx_IO_BASE(2) 0 0x10000
+		<0x81000000 0 CP110_PCIEx_IO_BASE_L(2) CP110_PCIEx_IO_BASE_H(2) CP110_PCIEx_IO_BASE_L(2) 0 0x10000
 		/* non-prefetchable memory */
-		 0x82000000 0 CP110_PCIEx_MEM_BASE(2) 0  CP110_PCIEx_MEM_BASE(2) 0 0xf00000>;
+		 0x82000000 0 CP110_PCIEx_MEM_BASE_L(2) CP110_PCIEx_MEM_BASE_H(2) CP110_PCIEx_MEM_BASE_L(2) 0 0xf00000>;
 	interrupt-map-mask = <0 0 0 0>;
 	interrupt-map = <0 0 0 0 &CP110_LABEL(icu) ICU_GRP_NSR 23 IRQ_TYPE_LEVEL_HIGH>;
 	interrupts = <ICU_GRP_NSR 23 IRQ_TYPE_LEVEL_HIGH>;
-- 
2.7.4

