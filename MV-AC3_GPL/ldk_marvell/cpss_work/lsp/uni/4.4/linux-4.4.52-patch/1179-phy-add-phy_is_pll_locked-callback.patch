From 79d6d91be0e3da4e3f674e05f1b5a68a5f94a1e6 Mon Sep 17 00:00:00 2001
From: Yedidia Falk <yedidiaf@marvell.com>
Date: Thu, 22 Dec 2016 14:27:13 +0200
Subject: [PATCH 1179/2241] phy: add phy_is_pll_locked callback

This callback may be used to check the PLL status of
the corresponding phy.
For this purpose, a private implementation of this callback is required.

Change-Id: I8ae248fe0cb2a55f218fc720dbed0262203e601c
Signed-off-by: Yedidia Falk <yedidiaf@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/34920
Reviewed-by: Felix Kaushansky <felixka@marvell.com>
---
 drivers/phy/phy-core.c  | 14 ++++++++++++++
 include/linux/phy/phy.h | 10 ++++++++++
 2 files changed, 24 insertions(+)

diff --git a/drivers/phy/phy-core.c b/drivers/phy/phy-core.c
index 0c9dc82..0a9f266 100644
--- a/drivers/phy/phy-core.c
+++ b/drivers/phy/phy-core.c
@@ -374,6 +374,20 @@ enum phy_mode phy_get_mode(struct phy *phy)
 }
 EXPORT_SYMBOL_GPL(phy_get_mode);
 
+int phy_is_pll_locked(struct phy *phy)
+{
+	int ret;
+
+	if (!phy || !phy->ops->is_pll_locked)
+		return 0;
+
+	mutex_lock(&phy->mutex);
+	ret = phy->ops->is_pll_locked(phy);
+	mutex_unlock(&phy->mutex);
+
+	return ret;
+}
+
 /**
  * _of_phy_get() - lookup and obtain a reference to a phy by phandle
  * @np: device_node for which to get the phy
diff --git a/include/linux/phy/phy.h b/include/linux/phy/phy.h
index b7f97b7..d7db627 100644
--- a/include/linux/phy/phy.h
+++ b/include/linux/phy/phy.h
@@ -37,6 +37,7 @@ enum phy_mode {
  * @power_off: powering off the phy
  * @set_mode: set the mode of the phy
  * @get_mode: get the mode of the phy
+ * @is_pll_locked: check phy's PLL status (locked/unlocked)
  * @owner: the module owner containing the ops
  */
 struct phy_ops {
@@ -46,6 +47,7 @@ struct phy_ops {
 	int	(*power_off)(struct phy *phy);
 	int	(*set_mode)(struct phy *phy, enum phy_mode mode);
 	enum phy_mode	(*get_mode)(struct phy *phy);
+	int	(*is_pll_locked)(struct phy *phy);
 	struct module *owner;
 };
 
@@ -132,6 +134,7 @@ int phy_power_on(struct phy *phy);
 int phy_power_off(struct phy *phy);
 int phy_set_mode(struct phy *phy, enum phy_mode mode);
 enum phy_mode phy_get_mode(struct phy *phy);
+int phy_is_pll_locked(struct phy *phy);
 static inline int phy_get_bus_width(struct phy *phy)
 {
 	return phy->attrs.bus_width;
@@ -251,6 +254,13 @@ static inline enum phy_mode phy_get_mode(struct phy *phy)
 	return -ENOSYS;
 }
 
+static inline int phy_is_pll_locked(struct phy *phy)
+{
+	if (!phy)
+		return 0;
+	return -ENOSYS;
+}
+
 static inline int phy_get_bus_width(struct phy *phy)
 {
 	return -ENOSYS;
-- 
2.7.4

