From 54f3112832cb72820c84144f9b0156abb0b61fce Mon Sep 17 00:00:00 2001
From: Hanna Hawa <hannah@marvell.com>
Date: Mon, 9 Oct 2017 15:48:27 +0300
Subject: [PATCH 2028/2241] irqchip/gicv3-its: add workaround for MVEBU ITS
 errata

On Marvell Armada-AP810 SoCs, it include GIC-600.
There's bug in fabric connection to GIC-600, due this bug the ITS
got wrong data in queue command & interrupt translation table.

This commit enables workaround for Marvell SoCs by using GIC
revision r1p0 (The IIDR revision of GIC-ITS allocated for Marvell
release approved by ARM).
The workaround enables cache flush flags to enable flushing the
cache after configuring queue command or interrupt translation tables,
so the ITS would get the correct data instead of the corrupted data.

We use the "ITS_FLAGS_WORKAROUND_MVEBU_ERRATA" define for
this workaround waiting for an errata number.

Change-Id: Id6a4d4fa22967176233f62633c568ef8b45a7965
Signed-off-by: Hanna Hawa <hannah@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45080
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 drivers/irqchip/irq-gic-v3-its.c | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index c5f1757..8af56e8 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -42,6 +42,7 @@
 #define ITS_FLAGS_CMDQ_NEEDS_FLUSHING		(1ULL << 0)
 #define ITS_FLAGS_WORKAROUND_CAVIUM_22375	(1ULL << 1)
 #define ITS_FLAGS_WORKAROUND_CAVIUM_23144	(1ULL << 2)
+#define ITS_FLAGS_WORKAROUND_MVEBU_ERRATA	(1ULL << 3)
 
 #define RDIST_FLAGS_PROPBASE_NEEDS_FLUSHING	(1 << 0)
 
@@ -1436,6 +1437,17 @@ static void __maybe_unused its_enable_quirk_cavium_23144(void *data)
 	its->flags |= ITS_FLAGS_WORKAROUND_CAVIUM_23144;
 }
 
+static void __maybe_unused its_enable_quirk_mvebu(void *data)
+{
+	struct its_node *its = data;
+
+	/*
+	 * Enable MVEBU workaround to flush the command
+	 * queue & ITS translation table
+	 */
+	its->flags |= ITS_FLAGS_WORKAROUND_MVEBU_ERRATA;
+}
+
 static const struct gic_quirk its_quirks[] = {
 #ifdef CONFIG_CAVIUM_ERRATUM_22375
 	{
@@ -1454,6 +1466,10 @@ static const struct gic_quirk its_quirks[] = {
 	},
 #endif
 	{
+		.desc	= "ITS: Marvell workaround errata",
+		.iidr	= 0x0201043B, /* r1p0 revision ID for Marvell release */
+		.mask	= 0xffffffff,
+		.init	= its_enable_quirk_mvebu,
 	}
 };
 
@@ -1558,6 +1574,23 @@ static int its_probe(struct device_node *node, struct irq_domain *parent)
 		its->flags |= ITS_FLAGS_CMDQ_NEEDS_FLUSHING;
 	}
 
+	/*
+	 * In Marvell case it was architecturally-defined that GIC
+	 * support Shareability & Cacheability but due to fabric signals
+	 * issue, the HW allows to enable those bits (falsely), which
+	 * will lead to not enabling ITS_FLAGS_CMDQ_NEEDS_FLUSHING.
+	 * but due to that missing fabric signals, Marvell implementation
+	 * requires enabling ITS_FLAGS_CMDQ_NEEDS_FLUSHING.
+	 */
+	if (its->flags & ITS_FLAGS_WORKAROUND_MVEBU_ERRATA) {
+		its->flags |= ITS_FLAGS_CMDQ_NEEDS_FLUSHING;
+
+		baser &= ~(GITS_CBASER_SHAREABILITY_MASK |
+			   GITS_CBASER_CACHEABILITY_MASK);
+		baser |= GITS_CBASER_nCnB | GITS_CBASER_NonShareable;
+		writeq_relaxed(baser, its->base + GITS_CBASER);
+	}
+
 	writeq_relaxed(0, its->base + GITS_CWRITER);
 	writel_relaxed(GITS_CTLR_ENABLE, its->base + GITS_CTLR);
 
-- 
2.7.4

