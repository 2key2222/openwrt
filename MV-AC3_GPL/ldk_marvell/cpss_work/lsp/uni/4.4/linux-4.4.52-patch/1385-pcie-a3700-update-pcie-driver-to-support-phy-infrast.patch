From 817651ff190db6cfc6d7a0a3a327ec983697c24a Mon Sep 17 00:00:00 2001
From: Evan Wang <xswang@marvell.com>
Date: Mon, 16 Jan 2017 17:35:07 +0800
Subject: [PATCH 1385/2241] pcie: a3700: update pcie driver to support phy
 infrastructure

Change-Id: I08a646d4b74af8460de200ca5f4dc1e8988a2368
Signed-off-by: Evan Wang <xswang@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/35607
Reviewed-by: Victor Gu <xigu@marvell.com>
Tested-by: Victor Gu <xigu@marvell.com>
---
 drivers/pci/host/pci-aardvark.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/drivers/pci/host/pci-aardvark.c b/drivers/pci/host/pci-aardvark.c
index d4164bf..dcfbf6a 100644
--- a/drivers/pci/host/pci-aardvark.c
+++ b/drivers/pci/host/pci-aardvark.c
@@ -20,6 +20,7 @@
 #include <linux/platform_device.h>
 #include <linux/of_address.h>
 #include <linux/of_pci.h>
+#include <linux/phy/phy.h>
 
 /* PCIe core registers */
 #define PCIE_CORE_CMD_STATUS_REG				0x4
@@ -40,6 +41,10 @@
 #define     PCIE_CORE_ERR_CAPCTL_ECRC_CHK_TX_EN			BIT(6)
 #define     PCIE_CORE_ERR_CAPCTL_ECRC_CHCK			BIT(7)
 #define     PCIE_CORE_ERR_CAPCTL_ECRC_CHCK_RCV			BIT(8)
+#define PCIE_PHY_REF_CLOCK					0x4814
+#define     PCIE_PHY_CTRL_OFF					16
+#define     PCIE_PHY_BUF_CTRL_OFF				0
+#define     PCIE_PHY_BUF_CTRL_INIT_VAL				0x1342
 
 /* PIO registers base address and register offsets */
 #define PIO_BASE_ADDR				0x4000
@@ -186,6 +191,7 @@
 struct advk_pcie {
 	struct platform_device *pdev;
 	void __iomem *base;
+	struct phy *phy;
 	struct list_head resources;
 	struct irq_domain *irq_domain;
 	struct irq_chip irq_chip;
@@ -912,6 +918,8 @@ static int advk_pcie_probe(struct platform_device *pdev)
 	struct msi_controller *msi;
 	struct device_node *msi_node;
 	struct clk *clk;
+	struct phy *comphy;
+	struct device_node *dn = pdev->dev.of_node;
 	int ret, irq;
 
 	pcie = devm_kzalloc(&pdev->dev, sizeof(struct advk_pcie),
@@ -929,6 +937,23 @@ static int advk_pcie_probe(struct platform_device *pdev)
 		return PTR_ERR(pcie->base);
 	}
 
+	/* Get comphy and init if there is */
+	comphy = devm_of_phy_get(&pdev->dev, dn, "comphy");
+	if (!IS_ERR(comphy)) {
+		/* Set HW Reference Clock Buffer Control */
+		advk_writel(pcie, PCIE_PHY_BUF_CTRL_INIT_VAL, PCIE_PHY_REF_CLOCK);
+		pcie->phy = comphy;
+		ret = phy_init(pcie->phy);
+		if (ret)
+			return ret;
+
+		ret = phy_power_on(pcie->phy);
+		if (ret) {
+			phy_exit(pcie->phy);
+			goto err_exit_phy;
+		}
+	}
+
 	irq = platform_get_irq(pdev, 0);
 	ret = devm_request_irq(&pdev->dev, irq, advk_pcie_irq_handler,
 			       IRQF_SHARED | IRQF_NO_THREAD, "advk-pcie",
@@ -997,6 +1022,10 @@ static int advk_pcie_probe(struct platform_device *pdev)
 
 err_clk:
 	clk_disable_unprepare(clk);
+err_exit_phy:
+	if (pcie->phy)
+		phy_exit(pcie->phy);
+
 	return ret;
 }
 
-- 
2.7.4

