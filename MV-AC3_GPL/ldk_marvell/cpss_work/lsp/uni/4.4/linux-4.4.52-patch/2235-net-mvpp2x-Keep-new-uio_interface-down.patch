From 2c21e3a6c7eb68efbbe5b5b5a5d6ac4def890c1a Mon Sep 17 00:00:00 2001
From: Yuval Caduri <cyuval@marvell.com>
Date: Wed, 7 Feb 2018 13:38:32 +0200
Subject: [PATCH 2235/2241] net: mvpp2x: Keep new uio_interface down

Update to API for consistency.
In both directions, when moving interface to user_space,
of from userspace back to kernel, interface will be kept down.

Change-Id: Iaabb42bb7311081ccdb7237e67d7e06d766e06f7
Signed-off-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/50167
Reviewed-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index 71fd991..a2ccb13 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -5548,7 +5548,6 @@ static int mv_pp22_uio_mem_map(struct mv_pp2x_uio *pp2x_uio, struct resource *re
 int mv_pp2x_port_musdk_set(void *netdev_priv)
 {
 	struct mv_pp2x_port *port = netdev_priv;
-	bool was_running = false;
 
 	if (port->flags & MVPP2_F_IF_MUSDK)
 		return 0;
@@ -5559,7 +5558,7 @@ int mv_pp2x_port_musdk_set(void *netdev_priv)
 	if (netif_running(port->dev)) {
 		rtnl_lock();
 		dev_close(port->dev);
-		was_running = true;
+		rtnl_unlock();
 	}
 	/* Backup num configured entities */
 	port->cfg_num_qvector   = port->num_qvector;
@@ -5575,10 +5574,6 @@ int mv_pp2x_port_musdk_set(void *netdev_priv)
 	mv_pp2x_open_cls(port->dev);
 
 	port->flags |= MVPP2_F_IF_MUSDK;
-	if (was_running) {
-		dev_open(port->dev);
-		rtnl_unlock();
-	}
 	return 0;
 }
 EXPORT_SYMBOL(mv_pp2x_port_musdk_set);
-- 
2.7.4

