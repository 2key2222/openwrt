From 119abc1bb6ad6ec66c310dac0d4e9fbd5975f9db Mon Sep 17 00:00:00 2001
From: Victor Gu <xigu@marvell.com>
Date: Tue, 12 Sep 2017 18:32:18 +0800
Subject: [PATCH 2001/2241] fix: spi: armada-3700: remove clock operation
 during suspend and resume

The SPI clock is prepared during probe, enabled during each
SPI data transfer and then disabled after that.
Thus no need to disable and enable the clock during system suspend
and resume, otherwise there will be clock warning when disable the
clock again during suspend while the lock is already disabled either
by default after probe or after each data transfer.
This patch removes the clock opetation during suspend and resume to
fix the warning.

Change-Id: I9eb421cc38e959544429de3f5d83886878127163
Signed-off-by: Victor Gu <xigu@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/44259
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Wilson Ding <dingwei@marvell.com>
---
 drivers/spi/spi-armada-3700.c | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/drivers/spi/spi-armada-3700.c b/drivers/spi/spi-armada-3700.c
index 876de09..bd3b951 100644
--- a/drivers/spi/spi-armada-3700.c
+++ b/drivers/spi/spi-armada-3700.c
@@ -899,10 +899,6 @@ static int a3700_spi_suspend(struct device *dev)
 	spi->spi_cfg = spireg_read(spi, A3700_SPI_IF_CFG_REG);
 	spi->spi_timing = spireg_read(spi, A3700_SPI_IF_TIME_REG);
 
-	/* Disable spi clock */
-	if (!IS_ERR(spi->clk))
-		clk_disable_unprepare(spi->clk);
-
 	return 0;
 }
 
@@ -913,13 +909,6 @@ static int a3700_spi_resume(struct device *dev)
 	struct a3700_spi *spi = spi_master_get_devdata(master);
 	int ret;
 
-	/* Enable spi clock */
-	if (!IS_ERR(spi->clk)) {
-		ret = clk_prepare_enable(spi->clk);
-		if (ret)
-			return ret;
-	}
-
 	/* Mask the interrupts and clear cause bits */
 	spireg_write(spi, A3700_SPI_INT_MASK_REG, 0);
 	spireg_write(spi, A3700_SPI_INT_STAT_REG, ~0U);
-- 
2.7.4

