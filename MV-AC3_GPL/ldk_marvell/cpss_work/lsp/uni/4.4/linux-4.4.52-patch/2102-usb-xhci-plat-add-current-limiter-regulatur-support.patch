From 4d774cf7692404f18edc468e58ce669c3e25566e Mon Sep 17 00:00:00 2001
From: David Sniatkiwicz <davidsn@marvell.com>
Date: Wed, 1 Nov 2017 09:57:10 +0200
Subject: [PATCH 2102/2241] usb: xhci-plat: add current-limiter regulatur
 support

On Armada-70x0/80x0-db current_limit signal controls the usb current limit.
When enabled, the signal configures the current limit to 900mA (for USB3)
otherwise, the current limit is 500mA.
This patch adds support that allows us to configure the
current limit using current-limiter regulator.

Change-Id: I82264181550fd97bb9810a63326ab33b05a4d7a3
Signed-off-by: David Sniatkiwicz <davidsn@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/45749
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt |  3 +++
 drivers/usb/host/xhci-plat.c                            | 10 ++++++++++
 2 files changed, 13 insertions(+)

diff --git a/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt b/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
index 5be01c8..5c52abe 100644
--- a/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
+++ b/Documentation/devicetree/bindings/usb/usb-nop-xceiv.txt
@@ -15,6 +15,8 @@ Optional properties:
 
 - vcc-supply: phandle to the regulator that provides power to the PHY.
 
+- current-limiter-supply: phandle to the regulator that set the current limit to the PHY.
+
 - reset-gpios: Should specify the GPIO for reset.
 
 - vbus-detect-gpio: should specify the GPIO detecting a VBus insertion
@@ -30,6 +32,7 @@ Example:
 		clocks = <&osc 0>;
 		clock-names = "main_clk";
 		vcc-supply = <&hsusb1_vcc_regulator>;
+		current-limiter-supply = <&hsusb1_current_limiter_regulator>;
 		reset-gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;
 		vbus-detect-gpio = <&gpio2 13 GPIO_ACTIVE_HIGH>;
 		vbus-regulator = <&vbus_regulator>;
diff --git a/drivers/usb/host/xhci-plat.c b/drivers/usb/host/xhci-plat.c
index 1067ae1..268ad6b 100644
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@ -123,6 +123,7 @@ static int xhci_plat_probe(struct platform_device *pdev)
 	struct clk              *clk;
 	int			ret;
 	int			irq;
+	struct regulator	*current_limiter_regulator;
 
 	if (usb_disabled())
 		return -ENODEV;
@@ -214,6 +215,15 @@ static int xhci_plat_probe(struct platform_device *pdev)
 		ret = usb_phy_init(hcd->usb_phy);
 		if (ret)
 			goto put_usb3_hcd;
+
+		current_limiter_regulator =
+			devm_regulator_get_optional((hcd->usb_phy)->dev,
+						    "current-limiter");
+		if (!IS_ERR(current_limiter_regulator)) {
+			if (regulator_enable(current_limiter_regulator))
+				dev_err(&pdev->dev,
+					"Failed to enable Current-limiter regulator\n");
+		}
 	}
 
 	if (of_device_is_compatible(pdev->dev.of_node,
-- 
2.7.4

