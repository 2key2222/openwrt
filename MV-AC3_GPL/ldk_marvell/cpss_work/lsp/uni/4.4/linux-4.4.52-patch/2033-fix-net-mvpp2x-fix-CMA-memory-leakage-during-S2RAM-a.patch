From f5a77c19d51a76dd6ae076947bc06825b68888fa Mon Sep 17 00:00:00 2001
From: Stefan Chulski <stefanc@marvell.com>
Date: Tue, 26 Sep 2017 15:44:31 +0300
Subject: [PATCH 2033/2241] fix: net: mvpp2x: fix CMA memory leakage during
 S2RAM and rmmod procedures

This patch fix CMA memory leakage during S2RAM and rmmod procedures.
Board get stuck after  119 times of S2RAM/rmmod operations.

Issue root cause:
Pools remove loop uses priv->num_pools variable, this variable incremented
inside the loop and as result not all pools removed.

Fix:
Save number of pools in CPN before entering pools remove loop.

Change-Id: I27f0c5381df84ee0170fad09452736b80c6c7459
Signed-off-by: Stefan Chulski <stefanc@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/44682
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Reviewed-by: Yuval Caduri <cyuval@marvell.com>
Reviewed-by: Omri Itach <omrii@marvell.com>
---
 drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
index aa2ed82..3505040 100644
--- a/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2x/mv_pp2x_main.c
@@ -6088,7 +6088,7 @@ static int mv_pp2x_remove(struct platform_device *pdev)
 {
 	struct mv_pp2x *priv = platform_get_drvdata(pdev);
 	struct mv_pp2x_hw *hw = &priv->hw;
-	int i, num_of_ports, cpu;
+	int i, num_of_ports, cpu, num_of_pools;
 	struct mv_pp2x_cp_pcpu *cp_pcpu;
 
 	if (priv->pp2_version == PPV22 && mv_pp2x_queue_mode == MVPP2_QDIST_MULTI_MODE)
@@ -6111,7 +6111,9 @@ static int mv_pp2x_remove(struct platform_device *pdev)
 		priv->num_ports--;
 	}
 
-	for (i = 0; i < priv->num_pools; i++) {
+	num_of_pools = priv->num_pools;
+
+	for (i = 0; i < num_of_pools; i++) {
 		struct mv_pp2x_bm_pool *bm_pool = &priv->bm_pools[i];
 
 		mv_pp2x_bm_pool_destroy(&pdev->dev, priv, bm_pool);
@@ -6188,7 +6190,7 @@ static int mv_pp2x_probe_after_suspend(struct device *dev)
 static int mvpp2x_suspend(struct device *dev)
 {
 	struct mv_pp2x *priv = dev_get_drvdata(dev);
-	int i, num_of_ports;
+	int i, num_of_ports, num_of_pools;
 	struct platform_device *pdev = priv->pdev;
 
 	num_of_ports = priv->num_ports;
@@ -6220,8 +6222,8 @@ static int mvpp2x_suspend(struct device *dev)
 	devm_kfree(&pdev->dev, priv->hw.cls_shadow);
 	devm_kfree(&pdev->dev, priv->hw.c2_shadow);
 	devm_kfree(&pdev->dev, priv->aggr_txqs);
-
-	for (i = 0; i < priv->num_pools; i++) {
+	num_of_pools = priv->num_pools;
+	for (i = 0; i < num_of_pools; i++) {
 		struct mv_pp2x_bm_pool *bm_pool = &priv->bm_pools[i];
 
 		mv_pp2x_bm_pool_destroy(dev, priv, bm_pool);
-- 
2.7.4

