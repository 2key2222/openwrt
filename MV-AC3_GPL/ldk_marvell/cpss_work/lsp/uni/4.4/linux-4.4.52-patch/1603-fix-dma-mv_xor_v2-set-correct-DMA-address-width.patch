From 5b67bec322486593a01a7f55ea3d438b8595ac6a Mon Sep 17 00:00:00 2001
From: Igal Liberman <igall@marvell.com>
Date: Mon, 24 Apr 2017 15:51:42 +0300
Subject: [PATCH 1603/2241] fix: dma: mv_xor_v2: set correct DMA address width

Currently, there's a data corruption when working with A80x0
and DRAM size is bigger than 4GB. The data corruption happens
because the DMA bus width isn't configured properly.

The patch fixes the issue by implementing the following:
- Add new property to the device-tree: "dma-bus-width" to pass
  the correct DMA bus width to the driver.
- Call dma_set_mask_and_coherent() function: This function must
  be called before any DMA API calls, both to confirm DMA really
  is going to work, and also to describe the full inherent
  addressing capability which passed to the driver from the
  device-tree.

Calling dma_set_mask_and_coherent() with the correct bus width
solves the data corruption occurs when using XOR engine with DRAM
bigger than 4GB.

Documentation is updated accordingly.

Change-Id: I26d682213e2417774f05ce7d0fa9320539b034bf
Signed-off-by: Igal Liberman <igall@marvell.com>
Reviewed-on: http://vgitil04.il.marvell.com:8080/38852
Reviewed-by: Omri Itach <omrii@marvell.com>
Reviewed-by: Hanna Hawa <hannah@marvell.com>
Tested-by: iSoC Platform CI <ykjenk@marvell.com>
---
 Documentation/devicetree/bindings/dma/mv-xor-v2.txt |  2 ++
 arch/arm64/boot/dts/marvell/armada-ap806.dtsi       |  4 ++++
 arch/arm64/boot/dts/marvell/armada-cp110-1.dtsi     |  2 ++
 arch/arm64/boot/dts/marvell/armada-cp110.dtsi       |  2 ++
 drivers/dma/mv_xor_v2.c                             | 13 +++++++++++++
 5 files changed, 23 insertions(+)

diff --git a/Documentation/devicetree/bindings/dma/mv-xor-v2.txt b/Documentation/devicetree/bindings/dma/mv-xor-v2.txt
index bb0091b..006699e 100644
--- a/Documentation/devicetree/bindings/dma/mv-xor-v2.txt
+++ b/Documentation/devicetree/bindings/dma/mv-xor-v2.txt
@@ -5,6 +5,7 @@ Required properties:
 - reg: Should contain registers location and length (two sets)
     the first set is the DMA registers
     the second set is the global registers
+- dma-bus-width: DMA address bus width
 - msi-parent: Phandle to the MSI-capable interrupt controller used for
   interrupts.
 - clocks: One ore more clock gating clocks to be used to enable DMA engine
@@ -19,4 +20,5 @@ Example:
 		msi-parent = <&gic_odmi>;
 		clocks = <&gateclk 14>;
 		dma-coherent;
+		dma-width = <40>;
 	};
diff --git a/arch/arm64/boot/dts/marvell/armada-ap806.dtsi b/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
index a41f56f..3e2bd0b 100644
--- a/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-ap806.dtsi
@@ -371,6 +371,7 @@
 				      <0x410000 0x1000>;
 				msi-parent = <&gic_v2m0>;
 				dma-coherent;
+				dma-bus-width = <40>;
 				clocks = <&syscon 3>;
 				status = "okay";
 			};
@@ -381,6 +382,7 @@
 				      <0x430000 0x1000>;
 				msi-parent = <&gic_v2m0>;
 				dma-coherent;
+				dma-bus-width = <40>;
 				clocks = <&syscon 3>;
 				status = "okay";
 			};
@@ -391,6 +393,7 @@
 				      <0x450000 0x1000>;
 				msi-parent = <&gic_v2m0>;
 				dma-coherent;
+				dma-bus-width = <40>;
 				clocks = <&syscon 3>;
 				status = "okay";
 			};
@@ -401,6 +404,7 @@
 				      <0x470000 0x1000>;
 				msi-parent = <&gic_v2m0>;
 				dma-coherent;
+				dma-bus-width = <40>;
 				clocks = <&syscon 3>;
 				status = "okay";
 			};
diff --git a/arch/arm64/boot/dts/marvell/armada-cp110-1.dtsi b/arch/arm64/boot/dts/marvell/armada-cp110-1.dtsi
index 6578f60..2d5374e5 100644
--- a/arch/arm64/boot/dts/marvell/armada-cp110-1.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-cp110-1.dtsi
@@ -177,6 +177,7 @@ dma_xor@6a0000 {
 	reg = <0x6a0000 0x1000>,
 	      <0x6b0000 0x1000>;
 	dma-coherent;
+	dma-bus-width = <40>;
 	msi-parent = <&gic_v2m0>;
 	clocks = <&cps_syscon0 1 8>;
 	status = "okay";
@@ -187,6 +188,7 @@ dma_xor@6c0000 {
 	reg = <0x6c0000 0x1000>,
 	      <0x6d0000 0x1000>;
 	dma-coherent;
+	dma-bus-width = <40>;
 	msi-parent = <&gic_v2m0>;
 	clocks = <&cps_syscon0 1 7>;
 	status = "okay";
diff --git a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
index b302027..01ad82f 100644
--- a/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
+++ b/arch/arm64/boot/dts/marvell/armada-cp110.dtsi
@@ -269,6 +269,7 @@ dma_xor@6a0000 {
 	reg = <0x6a0000 0x1000>,
 	      <0x6b0000 0x1000>;
 	dma-coherent;
+	dma-bus-width = <40>;
 	msi-parent = <&gic_v2m0>;
 	clocks = <&cpm_syscon0 1 8>;
 	status = "okay";
@@ -279,6 +280,7 @@ dma_xor@6c0000 {
 	reg = <0x6c0000 0x1000>,
 	      <0x6d0000 0x1000>;
 	dma-coherent;
+	dma-bus-width = <40>;
 	msi-parent = <&gic_v2m0>;
 	clocks = <&cpm_syscon0 1 7>;
 	status = "okay";
diff --git a/drivers/dma/mv_xor_v2.c b/drivers/dma/mv_xor_v2.c
index 1c76159..b0dd312 100644
--- a/drivers/dma/mv_xor_v2.c
+++ b/drivers/dma/mv_xor_v2.c
@@ -889,6 +889,7 @@ static int mv_xor_v2_probe(struct platform_device *pdev)
 	struct mv_xor_v2_sw_desc *sw_desc;
 	struct msi_desc *msi_desc;
 	struct device *dev = &pdev->dev;
+	u32 dma_bus_width;
 
 	dev_notice(&pdev->dev, "Marvell Version 2 XOR driver\n");
 
@@ -925,6 +926,18 @@ static int mv_xor_v2_probe(struct platform_device *pdev)
 	if (ret)
 		goto disable_clk;
 
+	/* Read the DMA bus width from the device-tree and configure it */
+	ret = of_property_read_u32(pdev->dev.of_node, "dma-bus-width",
+				   &dma_bus_width);
+	if (ret) {
+		dev_err(&pdev->dev, "Failed to read dma-bus-width property\n");
+		goto disable_clk;
+	}
+
+	ret = dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(dma_bus_width));
+	if (ret)
+		goto disable_clk;
+
 	msi_desc = first_msi_entry(&pdev->dev);
 	if (!msi_desc)
 		goto free_msi_irqs;
-- 
2.7.4

