#!/usr/bin/lua
local uci   = require "luci.model.uci"
local fs    = require "luci.fs"
local dbg   = require "luci.tools.debug"

local STAT_CURRENT_FILE = "/tmp/ipstat/stat_current_build"
local STAT_PREV_FILE = "/tmp/ipstat/stat_prev_build"
local STAT_4G_COUNT_FILE = "/tmp/ipstat/stat_count_build"
local STAT_4G_COUNT = "/tmp/ipstat/stat_count"

local function file_exists(path)
    local file = io.open(path, "rb")
    if file then
        file:close()
    end
    return file ~= nil
end

function update_4g_count()
    local stats_current = {}
    local stats_prev = {}
    local stats_count = {}
    --  1      2       3        4         5
    -- addr;src pkt;src bytes;dst pkts;dst bytes

    if file_exists(STAT_PREV_FILE) then
        for line in io.lines(STAT_PREV_FILE) do
            local entry = string.split(line, ';')
            stats_prev[entry[1]] = {entry[2],entry[3],entry[4],entry[5]}
        end
    end
    if file_exists(STAT_4G_COUNT) then
        for line in io.lines(STAT_4G_COUNT) do
            local entry = string.split(line, ';')
            stats_count[entry[1]] = {entry[2],entry[3],entry[4],entry[5]}
        end
    end
    local count = ""
    local tmp1 = 0
    local tmp2 = 0
    local tmp3 = 0
    local tmp4 = 0
    local changed = false
    if file_exists(STAT_CURRENT_FILE) then
        for line in io.lines(STAT_CURRENT_FILE) do
            local entry = string.split(line, ';')

            if stats_prev[entry[1]] and stats_count[entry[1]] then
                if tonumber(stats_prev[entry[1]][1]) > tonumber(entry[2]) then
                    changed = true
                    stats_count[entry[1]][1] = tonumber(stats_count[entry[1]][1]) + 1
                end
                if tonumber(stats_prev[entry[1]][2]) > tonumber(entry[3]) then
                    changed = true
                    stats_count[entry[1]][2] = tonumber(stats_count[entry[1]][2]) + 1
                end
                if tonumber(stats_prev[entry[1]][3]) > tonumber(entry[4]) then
                    changed = true
                    stats_count[entry[1]][3] = tonumber(stats_count[entry[1]][3]) + 1
                end
                if tonumber(stats_prev[entry[1]][4]) > tonumber(entry[5]) then
                    changed = true
                    stats_count[entry[1]][4] = tonumber(stats_count[entry[1]][4]) + 1
                end
                tmp1, tmp2, tmp3, tmp4 = stats_count[entry[1]][1], stats_count[entry[1]][2], stats_count[entry[1]][3], stats_count[entry[1]][4]
            else
                changed = true
                tmp1, tmp2, tmp3, tmp4 = 0, 0, 0, 0
            end

            count = count .. entry[1] .. ";" .. tmp1 .. ";" .. tmp2 .. ";" .. tmp3 .. ";" .. tmp4 .. "\n"
        end
    end
    if changed then
        local file = io.open(STAT_4G_COUNT_FILE, "w")
        file:write(string.format(count))
        file:close()
    end
    --dbg(os.time().." count:"..count)
    return true
end

update_4g_count()