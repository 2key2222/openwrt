#!/bin/sh


# get port state
# $1: portid
get_port_state()
{
	local port=$1
	local val=0
	local bit=0

	local port_state=0
	local port_speed=0
	local port_dup_mode=0
	local port_flowcontrol="off"

	val=`swconfig_phy_reg_read $(($port-1)) $PHY_RESOLVED_REG`
	bit=`get_bit_value $val 2`

	if [ $bit -eq 1 ]; then
		port_state="connected"

		#get speed
		speed=$(($(($val & 0x0030)) >> 4))
		if [ $speed -eq 3 ];then
			port_speed="2500M"
		elif [ $speed -eq 2 ]; then
			port_speed="1000M"
		elif [ $speed -eq 1 ]; then
			port_speed="100M"
		else
			port_speed="10M"
		fi

		# get duplex mode
		duplex=$(($(($val & 0x0008)) >> 3))
		if [ $duplex -eq 1 ]; then
			port_dup_mode="Full"
		else
			port_dup_mode="Half"
		fi

		val=`swconfig_phy_reg_read $(($port-1)) $PHY_AN_ADVERTISEMENT_REG`
		bit=`get_bit_value $val 10`
		if [ $bit -eq 1 ]; then
			port_flowcontrol="on"
		else
			port_flowcontrol="off"
		fi
	else
		port_state="disconnected"

		port_speed="---"
		port_dup_mode="---"
		port_flowcontrol="---"
	fi	

	echo "Port $port:"
	echo "   state       : $port_state "
	echo "   speed       : $port_speed "
	echo "   dup_mode    : $port_dup_mode "
	echo "   flowcontrol : $port_flowcontrol "
	echo ""
}


stata_arg_check()
{
	local portsid=$1

	for i in $portsid; do
		if [ `expr match $i "[0-9]"` = 0 ] || [ $i -lt 1 ] || [ $i -gt 5 ] ;then
		echo "[state] port is invalid. (1~5)"
		exit 0
		fi
	done
}
# rtl8367s switch get port state
# $1: op (get)
# $2: portsid (1.2.3.4.5)
rtl8367s_switch_port_state()
{
	local op=$1
	local portsid=$2

	if [ $op = "get" ]; then	
		stata_arg_check "$portsid"
		for i in $portsid; do			
			get_port_state $i
		done
	else
		echo "[state] error op. (get)"
	fi
}