diff -Nuar a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
--- a/drivers/mtd/devices/m25p80.c	2017-03-08 20:15:32.000000000 +0800
+++ b/drivers/mtd/devices/m25p80.c	2017-07-12 17:11:48.000000000 +0800
@@ -955,6 +955,7 @@
 	{ "n25q128a13",  INFO(0x20ba18, 0, 64 * 1024,  256, 0) },
 	{ "n25q256a",    INFO(0x20ba19, 0, 64 * 1024,  512, SECT_4K) },
 	{ "n25q512a",    INFO(0x20bb20, 0, 64 * 1024, 1024, SECT_4K) },
+	{ "n25q256a",    INFO(0x20bb19, 0, 64 * 1024, 1024, SECT_4K) },
 
 	/* PMC */
 	{ "pm25lv512",   INFO(0,        0, 32 * 1024,    2, SECT_4K_PMC) },
@@ -1048,6 +1049,7 @@
 	{ "w25q128", INFO(0xef4018, 0, 64 * 1024, 256, SECT_4K) },
 	{ "w25q128fw", INFO(0xef6018, 0, 64 * 1024, 256, SECT_4K) },
 	{ "w25q256", INFO(0xef4019, 0, 64 * 1024, 512, SECT_4K) },
+	{ "w25q256jw", INFO(0xef6019, 0, 64 * 1024, 512, SECT_4K) },
 
 	/* Catalyst / On Semiconductor -- non-JEDEC */
 	{ "cat25c11", CAT25_INFO(  16, 8, 16, 1, M25P_NO_ERASE | M25P_NO_FR) },
diff -Nuar a/drivers/spi/spi.c b/drivers/spi/spi.c
--- a/drivers/spi/spi.c	2017-03-08 20:15:33.000000000 +0800
+++ b/drivers/spi/spi.c	2017-07-13 14:33:51.000000000 +0800
@@ -69,8 +69,70 @@
 }
 static DEVICE_ATTR_RO(modalias);
 
+static ssize_t
+device_id_show(struct device *dev, struct device_attribute *a, char *buf)
+{
+	const struct spi_device	*spi = to_spi_device(dev);
+
+	u8			code = 0x9f; /* OPCODE_RDID */
+	u8			id[13];
+	u8			sfdp[0x100];
+	u32			jedec_id = 0;
+	u32			ext_jedec;
+	u32*			uid_msb = NULL;
+	u32*			uid_lsb = NULL;
+
+	if(0 > spi_write_then_read(spi, &code, 1, id, 13))
+	{
+		pr_err("get code(0x9f) failed.\n");
+		return sprintf(buf, "none\n");
+	}
+
+	jedec_id = id[0] << 16 | id[1] << 8 | id[2];
+	ext_jedec = id[3] << 8 | id[4];
+	if(jedec_id == 0xc22539)  /* mx25u25635f */
+	{
+		code = 0x5a;
+	
+		if(0 > spi_write_then_read(spi, &code, 1, sfdp, 0x100))
+		{
+			pr_err("get code(0x5a) failed\n");
+			return sprintf(buf, "none\n");
+		}
+
+		uid_msb = &sfdp[0x95];
+		uid_lsb = &sfdp[0x99];
+	}
+	else if(id[0] == 0xef) /*winbond*/
+	{
+		code = 0x4b;
+		if(0 > spi_write_then_read(spi, &code, 1, sfdp, 0x100))
+                {
+                        pr_err("get code(0x5a) failed\n");
+                        return sprintf(buf, "none\n");
+                }
+
+                uid_msb = &sfdp[5];
+                uid_lsb = &sfdp[9];
+	}
+	else if(jedec_id == 0)
+	{
+		pr_err("jedec_id is invalid.\n");
+		return sprintf(buf, "none\n");
+	}
+	else
+	{
+		uid_msb = &id[5];
+		uid_lsb = &id[9];
+	}
+
+	return sprintf(buf, "%08x%08x\n", *uid_msb, *uid_lsb);
+}
+static DEVICE_ATTR_RO(device_id);
+
 static struct attribute *spi_dev_attrs[] = {
 	&dev_attr_modalias.attr,
+	&dev_attr_device_id.attr,
 	NULL,
 };
 ATTRIBUTE_GROUPS(spi_dev);
