--- netifd-2014-09-08/interface-event.c	2014-09-24 15:02:13.000000000 +0800
+++ netifd-tplink/interface-event.c	2015-08-07 14:46:41.000000000 +0800
@@ -14,6 +14,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <unistd.h>
 
 #include <libubox/uloop.h>
 
@@ -25,6 +26,7 @@
 static struct interface *current;
 static enum interface_event current_ev;
 static struct list_head pending = LIST_HEAD_INIT(pending);
+static struct interface *backuphotplugs[1024] = {NULL};
 
 static void task_complete(struct uloop_process *proc, int ret);
 static struct uloop_process task = {
@@ -89,6 +91,15 @@
 	D(SYSTEM, "Call hotplug handler for interface '%s', event '%s' (%s)\n",
 	current->name, eventnames[current_ev], device ? device : "none");
 	run_cmd(current->name, device, current_ev, current->updated);
+
+        {/* free the  backuphotplugs data */
+		int i = 0;
+		for (; i < 1024 && current != backuphotplugs[i]; i++);
+		if (i < 1024 && backuphotplugs[i] ) {
+			free(backuphotplugs[i]);
+			backuphotplugs[i] = NULL;
+		}
+	}
 }
 
 static void
@@ -181,8 +192,38 @@
 	if (iface == current)
 		current = NULL;
 
-	if (!list_empty(&iface->hotplug_list))
+	/* interface deleted from hotplug, we should back it */
+	if (!list_empty(&iface->hotplug_list)) {
+		struct interface *tmp;
+		int findit = 0;
+		int i = 0;
+
+		list_for_each_entry(tmp, &pending, hotplug_list) {
+			if (iface == tmp) {
+				findit = 1;
+				break;
+			}
+		}
 		list_del_init(&iface->hotplug_list);
+
+		if (!findit)
+			return;
+
+		for (; i< 1024 && backuphotplugs[i]; i++) ;
+		if (i < 1024) {
+			backuphotplugs[i] = calloc(1, sizeof(struct interface));
+			if (!backuphotplugs[i])
+				return;
+
+			*backuphotplugs[i] = *iface;
+			INIT_LIST_HEAD(&backuphotplugs[i]->hotplug_list);
+			if (iface->hotplug_ev == IFEV_DOWN)
+				backuphotplugs[i]->hotplug_ev = IFEV_UP;
+
+			interface_queue_event(backuphotplugs[i], iface->hotplug_ev);
+		}
+	}
+
 }
 
 static void interface_event_cb(struct interface_user *dep, struct interface *iface,
