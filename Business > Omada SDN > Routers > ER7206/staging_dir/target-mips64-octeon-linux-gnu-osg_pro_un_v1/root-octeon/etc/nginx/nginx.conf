
user root root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log  logs/error.log  debug;
error_log /dev/null crit;

pid        /tmp/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    #default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    access_log /dev/null;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    init_by_lua_file /usr/lib/lua/ngx_authserver/ngx_init.lua;
    init_worker_by_lua_file /usr/lib/lua/ngx_authserver/authlistCheck.lua;
    
    lua_shared_dict authListDict 2m;
    lua_shared_dict curAuthnumDict 16k;
    lua_shared_dict iosClientDict 256k;
    lua_shared_dict authUserDict 1m;
    lua_shared_dict authCfgDict 256k;
    lua_shared_dict userCfgDict 300k;
    server {
        listen       8080;
        server_name  localhost 169.254.11.22;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location ~ (\.jpg|\.bmp|\.png|\.css|\.js)$ {
          root /www/luci-static/resources/authserver/;
          expires 1d;
        } 

        location ~ (\.html)$ {
            root /www/luci-static/resources/web/;
            expires 1d;   
        } 

        location ~ ^/wifidog/ {
            content_by_lua_file /usr/lib/lua/ngx_authserver/ngx_wdas.lua;
        }

        location ~ ^/weixin/ {
            content_by_lua_file /usr/lib/lua/ngx_authserver/ngx_wdas.lua;
        }
        
	    location ~ ^/luci/ {
	        content_by_lua_file /usr/lib/lua/ngx_authserver/ngx_wdas.lua;
	    }        
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
	
	server {
        listen       4433 ssl;
        server_name  localhost;

        ssl                  on;
        ssl_certificate      /etc/portal_mgmt/client.crt;
        ssl_certificate_key  /etc/portal_mgmt/client.key;

		ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;
		
		location / {
			content_by_lua_file /usr/lib/portal_mgmt/rewrite.lua;
        }
		
    }

}
